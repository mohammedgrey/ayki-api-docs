openapi: 3.0.3
info:
  title: AYKI
  version: 1.0.0
  contact: {}
servers: []
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: '[User] User Registration'
      description: |-
        ## Register User

        This endpoint allows the user to register by providing their first name, last name, email, password, phone, and country code.

        ## User/Role

        user

        ### Request Body

        - `first_name` (string, required): The first name of the user.
        - `last_name` (string, required): The last name of the user.
        - `email` (string, required): The email address of the user.
        - `password` (string, required): The password for the user account.
        - `phone` (string, required): The phone number of the user.
        - `country_code` (string, required): The country code for the user's phone number.
      operationId: userUserRegistration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  example: LB
                email:
                  type: string
                  example: test@gmail.com
                first_name:
                  type: string
                  example: test
                last_name:
                  type: string
                  example: test
                password:
                  type: string
                  example: 1234qwerA!
                phone:
                  type: string
                  example: '+96170987654'
            examples:
              '[User] User Registration':
                value:
                  country_code: LB
                  email: test@gmail.com
                  first_name: test
                  last_name: test
                  password: 1234qwerA!
                  phone: '+96170987654'
      responses:
        '200':
          description: '[User] User Registration (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: LB
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: test@gmail.com
                          first_name:
                            type: string
                            example: test
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: false
                          last_name:
                            type: string
                            example: test
                          login_provider:
                            type: string
                            example: email
                          phone:
                            type: string
                            example: '+96170987654'
                          profile_picture:
                            nullable: true
                            example: null
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User registered successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] User Registration (200)':
                  value:
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg
                      user:
                        account_status: active
                        country_code: LB
                        created_at: 2023-12-25T08:30:00Z
                        email: test@gmail.com
                        first_name: test
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: false
                        last_name: test
                        login_provider: email
                        phone: '+96170987654'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User registered successfully
                    success: true
        '400':
          description: '[User] User Registration (400)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      email:
                        type: object
                        properties:
                          code:
                            type: string
                            example: email_already_taken
                          message:
                            type: string
                            example: The email provided is associated with another account.
                  message:
                    type: string
                    example: User regisration failed
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] User Registration (400)':
                  value:
                    data: null
                    errors:
                      email:
                        code: email_already_taken
                        message: The email provided is associated with another account.
                    message: User regisration failed
                    success: false
  /auth/login:
    post:
      tags:
      - auth
      summary: '[User] User Login'
      description: |-
        ## User Login

        This endpoint allows the user to log in by providing their email and password.

        ## User/Role

        user

        ### Request Body

        - `email` (string, required): The email address of the user.
        - `password` (string, required): The password for the user account.
      operationId: userUserLogin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: test@gmail.com
                password:
                  type: string
                  example: wrongpassword
            examples:
              '[User] User Login':
                value:
                  email: test@gmail.com
                  password: wrongpassword
      responses:
        '200':
          description: '[User] User Login (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: LB
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: test@gmail.com
                          first_name:
                            type: string
                            example: test
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: true
                          last_name:
                            type: string
                            example: test
                          login_provider:
                            type: string
                            example: email
                          phone:
                            type: string
                            example: '+96170987654'
                          profile_picture:
                            nullable: true
                            example: null
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User logged in successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] User Login (200)':
                  value:
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg
                      user:
                        account_status: active
                        country_code: LB
                        created_at: 2023-12-25T08:30:00Z
                        email: test@gmail.com
                        first_name: test
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: true
                        last_name: test
                        login_provider: email
                        phone: '+96170987654'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User logged in successfully
                    success: true
        '401':
          description: '[User] User Login (401)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      email:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_credentials
                          message:
                            type: string
                            example: Invalid email or password. Please try again.
                      password:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_credentials
                          message:
                            type: string
                            example: Invalid email or password. Please try again.
                  message:
                    type: string
                    example: User login failed
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] User Login (401)':
                  value:
                    data: null
                    errors:
                      email:
                        code: invalid_credentials
                        message: Invalid email or password. Please try again.
                      password:
                        code: invalid_credentials
                        message: Invalid email or password. Please try again.
                    message: User login failed
                    success: false
  /auth/social:
    post:
      tags:
      - auth
      summary: '[User] Social Authentication'
      description: |-
        ## Social Authentication

        This endpoint allows the user to continue with social authentication by providing their access token and provider (either `facebook` or `google`).

        ## User/Role

        user

        ### Request Body

        - `access_token` (string, required): The access token received from the social platform (Facebook or Google).
        - `provider` (string, required): The social platform provider (either `facebook` or `google`).
      operationId: userSocialAuthentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  example: INVALID_SOCIAL_ACCESS_TOKEN
                provider:
                  type: string
                  example: facebook
            examples:
              '[User] Social Authentication':
                value:
                  access_token: INVALID_SOCIAL_ACCESS_TOKEN
                  provider: facebook
      responses:
        '200':
          description: '[User] Social Authentication (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: LB
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: test@gmail.com
                          first_name:
                            type: string
                            example: test
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: true
                          last_name:
                            type: string
                            example: test
                          login_provider:
                            type: string
                            example: facebook
                          phone:
                            type: string
                            example: '+96170987654'
                          profile_picture:
                            nullable: true
                            example: null
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User logged in successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Social Authentication (200)':
                  value:
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg
                      user:
                        account_status: active
                        country_code: LB
                        created_at: 2023-12-25T08:30:00Z
                        email: test@gmail.com
                        first_name: test
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: true
                        last_name: test
                        login_provider: facebook
                        phone: '+96170987654'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User logged in successfully
                    success: true
        '401':
          description: '[User] Social Authentication (401)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      authentication:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_token
                          message:
                            type: string
                            example: Invalid access token. Please try again.
                  message:
                    type: string
                    example: User login failed
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Social Authentication (401)':
                  value:
                    data: null
                    errors:
                      authentication:
                        code: invalid_token
                        message: Invalid access token. Please try again.
                    message: User login failed
                    success: false
  /auth/logout:
    post:
      tags:
      - auth
      summary: '[User] Logout'
      description: |-
        ## User Logout

        This endpoint allows the user to logout from their account.

        ## User/Role

        user

        ### Request Body

        - No specific body required for logout.
      operationId: userLogout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              '[User] Logout':
                value: {}
      responses:
        '200':
          description: '[User] Logout (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User logged out successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Logout (200)':
                  value:
                    data: null
                    errors: null
                    message: User logged out successfully
                    success: true
        '401':
          description: '[User] Logout (401)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Unauthorized. Please log in to perform this action.
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Logout (401)':
                  value:
                    data: null
                    errors: null
                    message: Unauthorized. Please log in to perform this action.
                    success: false
  /auth/forgot-password:
    post:
      tags:
      - auth
      summary: '[User] Forgot Password'
      description: |-
        ## Forgot Password

        This endpoint allows the user to initiate the process of resetting their password by providing their email.

        ## User/Role

        public

        ### Request Body

        - `email` (string, required): The email address associated with the user's account.
      operationId: userForgotPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: ''
            examples:
              '[User] Forgot Password':
                value:
                  email: ''
      responses:
        '200':
          description: '[User] Forgot Password (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Password reset instructions sent to your email
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Forgot Password (200)':
                  value:
                    data: null
                    errors: null
                    message: Password reset instructions sent to your email
                    success: true
        '400':
          description: '[User] Forgot Password (400)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      email:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_email
                          message:
                            type: string
                            example: Invalid email format. Please provide a valid email address.
                  message:
                    type: string
                    example: Invalid email format. Please provide a valid email address.
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Forgot Password (400)':
                  value:
                    data: null
                    errors:
                      email:
                        code: invalid_email
                        message: Invalid email format. Please provide a valid email address.
                    message: Invalid email format. Please provide a valid email address.
                    success: false
  /auth/reset-password:
    post:
      tags:
      - auth
      summary: '[User] Reset Password'
      description: |-
        ## Reset Password

        This endpoint allows the user to reset their password by providing their email, reset token, and new password.

        ## User/Role

        public

        ### Request Body

        - `email` (string, required): The email address associated with the user's account.
        - `reset_token` (string, required): The token sent to the user's email for password reset.
        - `new_password` (string, required): The new password for the user's account.
      operationId: userResetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                new_password:
                  type: string
                  example: new_password_here
                reset_token:
                  type: string
                  example: ''
            examples:
              '[User] Reset Password':
                value:
                  email: user@example.com
                  new_password: new_password_here
                  reset_token: ''
      responses:
        '200':
          description: '[User] Reset Password (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Password has been reset successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Reset Password (200)':
                  value:
                    data: null
                    errors: null
                    message: Password has been reset successfully
                    success: true
        '400':
          description: '[User] Reset Password (400)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      token:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_token
                          message:
                            type: string
                            example: Invalid or expired reset token. Please request a new one.
                  message:
                    type: string
                    example: Invalid or expired reset token. Please request a new one.
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Reset Password (400)':
                  value:
                    data: null
                    errors:
                      token:
                        code: invalid_token
                        message: Invalid or expired reset token. Please request a new one.
                    message: Invalid or expired reset token. Please request a new one.
                    success: false
  /auth/resend-verification-email:
    post:
      tags:
      - auth
      summary: '[User] Resend Verification Email'
      description: |-
        ## Resend Verification Email

        This endpoint allows the user to request a resend of the verification email by providing their email.

        ## User/Role

        public

        ### Request Body

        - `email` (string, required): The email address associated with the user's account.
      operationId: userResendVerificationEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: ''
            examples:
              '[User] Resend Verification Email':
                value:
                  email: ''
      responses:
        '200':
          description: '[User] Resend Verification Email (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Verification email resent successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Resend Verification Email (200)':
                  value:
                    data: null
                    errors: null
                    message: Verification email resent successfully
                    success: true
        '400':
          description: '[User] Resend Verification Email (400)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      email:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_email
                          message:
                            type: string
                            example: Invalid email format. Please provide a valid email address.
                  message:
                    type: string
                    example: Invalid email format. Please provide a valid email address.
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Resend Verification Email (400)':
                  value:
                    data: null
                    errors:
                      email:
                        code: invalid_email
                        message: Invalid email format. Please provide a valid email address.
                    message: Invalid email format. Please provide a valid email address.
                    success: false
  /auth/verify-email:
    post:
      tags:
      - auth
      summary: '[User] Verify Email'
      description: |-
        ## Verify Email

        This endpoint allows the user to verify their email by providing their email and verification code.

        ## User/Role

        public

        ### Request Body

        - `email` (string, required): The email address associated with the user's account.
        - `verification_code` (string, required): The verification code sent to the user's email for email verification.
      operationId: userVerifyEmail
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                verification_code:
                  type: string
                  example: ''
            examples:
              '[User] Verify Email':
                value:
                  email: user@example.com
                  verification_code: ''
      responses:
        '200':
          description: '[User] Verify Email (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Email verified successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Verify Email (200)':
                  value:
                    data: null
                    errors: null
                    message: Email verified successfully
                    success: true
        '400':
          description: '[User] Verify Email (400)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      verification_code:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_code
                          message:
                            type: string
                            example: Invalid verification code. Please provide a valid verification code.
                  message:
                    type: string
                    example: Invalid verification code. Please provide a valid verification code.
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Verify Email (400)':
                  value:
                    data: null
                    errors:
                      verification_code:
                        code: invalid_code
                        message: Invalid verification code. Please provide a valid verification code.
                    message: Invalid verification code. Please provide a valid verification code.
                    success: false
  /auth/change-password:
    post:
      tags:
      - auth
      summary: '[User] Change Password'
      description: |-
        ## Change Password

        This endpoint allows the user to change their password by providing their email, current password, and new password.

        ## User/Role

        user

        ### Request Body

        - `email` (string, required): The email address associated with the user's account.
        - `current_password` (string, required): The user's current password.
        - `new_password` (string, required): The new password for the user's account.
      operationId: userChangePassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  example: incorrect_password
                email:
                  type: string
                  example: user@example.com
                new_password:
                  type: string
                  example: new_password_here
            examples:
              '[User] Change Password':
                value:
                  current_password: incorrect_password
                  email: user@example.com
                  new_password: new_password_here
      responses:
        '200':
          description: '[User] Change Password (200)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Password changed successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[User] Change Password (200)':
                  value:
                    data: null
                    errors: null
                    message: Password changed successfully
                    success: true
        '401':
          description: '[User] Change Password (401)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      current_password:
                        type: object
                        properties:
                          code:
                            type: string
                            example: incorrect_current_password
                          message:
                            type: string
                            example: Incorrect current password. Please try again.
                  message:
                    type: string
                    example: Incorrect current password. Please try again.
                  success:
                    type: boolean
                    example: false
              examples:
                '[User] Change Password (401)':
                  value:
                    data: null
                    errors:
                      current_password:
                        code: incorrect_current_password
                        message: Incorrect current password. Please try again.
                    message: Incorrect current password. Please try again.
                    success: false
  /users:
    get:
      tags:
      - users
      summary: '[Admin] Get Users'
      description: |-
        ## Admin Only

        This endpoint retrieves a list of users.

        ### Query Parameters:
        - `search` (string): Search query
        - `page` (number): Page number
        - `limit_per_page` (number): Limit per page
      operationId: adminGetUsers
      parameters:
      - name: search
        in: query
        schema:
          type: string
          example: query
      - name: page
        in: query
        schema:
          type: string
          example: '1'
      - name: limit_per_page
        in: query
        schema:
          type: string
          example: '10'
      responses:
        '200':
          description: '[Admin] Get Users Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            account_status:
                              type: string
                              example: active
                            country_code:
                              type: string
                              example: LB
                            created_at:
                              type: string
                              example: 2023-12-25T08:30:00Z
                            email:
                              type: string
                              example: test@gmail.com
                            first_name:
                              type: string
                              example: test
                            id:
                              type: string
                              example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                            is_email_verified:
                              type: boolean
                              example: false
                            last_name:
                              type: string
                              example: test
                            login_provider:
                              type: string
                              example: email
                            phone:
                              type: string
                              example: '+96170987654'
                            profile_picture:
                              nullable: true
                              example: null
                            role:
                              type: string
                              example: user
                            updated_at:
                              type: string
                              example: 2023-12-25T08:30:00Z
                        example:
                        - account_status: active
                          country_code: LB
                          created_at: 2023-12-25T08:30:00Z
                          email: test@gmail.com
                          first_name: test
                          id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified: false
                          last_name: test
                          login_provider: email
                          phone: '+96170987654'
                          profile_picture: null
                          role: user
                          updated_at: 2023-12-25T08:30:00Z
                      pagination:
                        type: object
                        properties:
                          current_page:
                            type: number
                            example: 1
                          last_page:
                            type: number
                            example: 5
                          limit_per_page:
                            type: number
                            example: 10
                          total_pages:
                            type: number
                            example: 5
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Users retrieved successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[Admin] Get Users Success':
                  value:
                    data:
                      items:
                      - account_status: active
                        country_code: LB
                        created_at: 2023-12-25T08:30:00Z
                        email: test@gmail.com
                        first_name: test
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: false
                        last_name: test
                        login_provider: email
                        phone: '+96170987654'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                      pagination:
                        current_page: 1
                        last_page: 5
                        limit_per_page: 10
                        total_pages: 5
                    errors: null
                    message: Users retrieved successfully
                    success: true
        '403':
          description: '[Admin] Get Users Failure'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Unauthorized. Admin access required.
                  success:
                    type: boolean
                    example: false
              examples:
                '[Admin] Get Users Failure':
                  value:
                    data: null
                    errors: null
                    message: Unauthorized. Admin access required.
                    success: false
      security:
      - bearerAuth: []
    post:
      tags:
      - users
      summary: '[Admin] Create User'
      description: |-
        ## Admin Only

        This endpoint creates a new user.

        ### Request Body

        - `email` (string, required): Email address
        - `password` (string, required): User password
        - `role` (string, required): User role
      operationId: adminCreateUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: new_password
                role:
                  type: string
                  example: user
            examples:
              '[Admin] Create User':
                value:
                  email: user@example.com
                  password: new_password
                  role: user
      responses:
        '201':
          description: '[Admin] Create User Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: LB
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: test@gmail.com
                          first_name:
                            type: string
                            example: test
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: false
                          last_name:
                            type: string
                            example: test
                          login_provider:
                            type: string
                            example: email
                          phone:
                            type: string
                            example: '+96170987654'
                          profile_picture:
                            nullable: true
                            example: null
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User created successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[Admin] Create User Success':
                  value:
                    data:
                      user:
                        account_status: active
                        country_code: LB
                        created_at: 2023-12-25T08:30:00Z
                        email: test@gmail.com
                        first_name: test
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: false
                        last_name: test
                        login_provider: email
                        phone: '+96170987654'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User created successfully
                    success: true
        '400':
          description: '[Admin] Create User Failure'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: Invalid request body
                  success:
                    type: boolean
                    example: false
              examples:
                '[Admin] Create User Failure':
                  value:
                    data: null
                    errors: null
                    message: Invalid request body
                    success: false
      security:
      - bearerAuth: []
  /users/{userId}:
    get:
      tags:
      - users
      summary: '[Admin] Get User by ID'
      description: |-
        ## Admin Only

        This endpoint retrieves user details by their ID.
      operationId: adminGetUserById
      responses:
        '200':
          description: '[Admin] Get User Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: US
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: john@example.com
                          first_name:
                            type: string
                            example: John
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: true
                          last_name:
                            type: string
                            example: Doe
                          login_provider:
                            type: string
                            example: email
                          phone:
                            type: string
                            example: '+1234567890'
                          profile_picture:
                            type: string
                            example: https://example.com/profile.jpg
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User details retrieved successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[Admin] Get User Success':
                  value:
                    data:
                      user:
                        account_status: active
                        country_code: US
                        created_at: 2023-12-25T08:30:00Z
                        email: john@example.com
                        first_name: John
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: true
                        last_name: Doe
                        login_provider: email
                        phone: '+1234567890'
                        profile_picture: https://example.com/profile.jpg
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User details retrieved successfully
                    success: true
        '404':
          description: '[Admin] Get User Failure'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User ID not found
                  success:
                    type: boolean
                    example: false
              examples:
                '[Admin] Get User Failure':
                  value:
                    data: null
                    errors: null
                    message: User ID not found
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - users
      summary: '[Admin] Delete User by ID'
      description: |-
        ## Admin Only

        This endpoint deletes a user by their ID.
      operationId: adminDeleteUserById
      responses:
        '200':
          description: '[Admin] Delete User Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[Admin] Delete User Success':
                  value:
                    data: null
                    errors: null
                    message: User deleted successfully
                    success: true
        '404':
          description: '[Admin] Delete User Failure'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User ID not found
                  success:
                    type: boolean
                    example: false
              examples:
                '[Admin] Delete User Failure':
                  value:
                    data: null
                    errors: null
                    message: User ID not found
                    success: false
      security:
      - bearerAuth: []
    patch:
      tags:
      - users
      summary: '[Admin] Update User by ID'
      description: |-
        ## Admin Only

        This endpoint updates a user's information by their ID.

        ### Request Body

        - `first_name` (string): Updated first name
        - `last_name` (string): Updated last name
        - `email` (string): Updated email address
        - `phone` (string): Updated phone number
        - `country_code` (string): Updated country code
      operationId: adminUpdateUserById
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  example: LB
                email:
                  type: string
                  example: updated_test@gmail.com
                first_name:
                  type: string
                  example: updated_test
                last_name:
                  type: string
                  example: updated_test
                phone:
                  type: string
                  example: '+96170987654'
            examples:
              '[Admin] Update User by ID':
                value:
                  country_code: LB
                  email: updated_test@gmail.com
                  first_name: updated_test
                  last_name: updated_test
                  phone: '+96170987654'
      responses:
        '200':
          description: '[Admin] Update User Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: LB
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: updated_test@gmail.com
                          first_name:
                            type: string
                            example: updated_test
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: true
                          last_name:
                            type: string
                            example: updated_test
                          login_provider:
                            type: string
                            example: facebook
                          phone:
                            type: string
                            example: '+96170987654'
                          profile_picture:
                            nullable: true
                            example: null
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[Admin] Update User Success':
                  value:
                    data:
                      user:
                        account_status: active
                        country_code: LB
                        created_at: 2023-12-25T08:30:00Z
                        email: updated_test@gmail.com
                        first_name: updated_test
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: true
                        last_name: updated_test
                        login_provider: facebook
                        phone: '+96170987654'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User updated successfully
                    success: true
        '404':
          description: '[Admin] Update User Failure'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User ID not found
                  success:
                    type: boolean
                    example: false
              examples:
                '[Admin] Update User Failure':
                  value:
                    data: null
                    errors: null
                    message: User ID not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: userId
      in: path
      required: true
      schema:
        type: string
  /users/{userId}/suspend:
    patch:
      tags:
      - users
      summary: '[Admin] Suspend User by ID'
      description: |-
        ## Admin Only

        This endpoint suspends a user by their ID.

        ### Request Body

        - `is_suspended` (boolean): Set to `true` to suspend the user.
      operationId: adminSuspendUserById
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_suspended:
                  type: boolean
                  example: true
            examples:
              '[Admin] Suspend User by ID':
                value:
                  is_suspended: true
      responses:
        '200':
          description: '[Admin] Suspend User Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User suspended successfully
                  success:
                    type: boolean
                    example: true
              examples:
                '[Admin] Suspend User Success':
                  value:
                    data: null
                    errors: null
                    message: User suspended successfully
                    success: true
        '404':
          description: '[Admin] Suspend User Failure'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User ID not found
                  success:
                    type: boolean
                    example: false
              examples:
                '[Admin] Suspend User Failure':
                  value:
                    data: null
                    errors: null
                    message: User ID not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: userId
      in: path
      required: true
      schema:
        type: string
  /users/profile:
    get:
      tags:
      - users
      summary: Get User Profile
      description: |-
        ## User Profile

        This endpoint retrieves the user's profile details.
      operationId: getUserProfile
      responses:
        '200':
          description: Get User Profile Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: US
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: john@example.com
                          first_name:
                            type: string
                            example: John
                          id:
                            type: string
                            example: '123456'
                          is_email_verified:
                            type: boolean
                            example: true
                          last_name:
                            type: string
                            example: Doe
                          login_provider:
                            type: string
                            example: email
                          phone:
                            type: string
                            example: '+1234567890'
                          profile_picture:
                            type: string
                            example: https://example.com/profile.jpg
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User profile retrieved successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Get User Profile Success:
                  value:
                    data:
                      user:
                        account_status: active
                        country_code: US
                        created_at: 2023-12-25T08:30:00Z
                        email: john@example.com
                        first_name: John
                        id: '123456'
                        is_email_verified: true
                        last_name: Doe
                        login_provider: email
                        phone: '+1234567890'
                        profile_picture: https://example.com/profile.jpg
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User profile retrieved successfully
                    success: true
        '404':
          description: Get User Profile Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User profile not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get User Profile Failure:
                  value:
                    data: null
                    errors: null
                    message: User profile not found
                    success: false
      security:
      - bearerAuth: []
    patch:
      tags:
      - users
      summary: Update User Profile
      description: |-
        ## User Profile

        This endpoint updates the user's profile details.

        ### Request Body

        - `first_name` (string): The updated first name.
        - `last_name` (string): The updated last name.
        - `phone` (string): The updated phone number.
        - `country_code` (string): The updated country code.
      operationId: updateUserProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                country_code:
                  type: string
                  example: US
                first_name:
                  type: string
                  example: Updated
                last_name:
                  type: string
                  example: User
                phone:
                  type: string
                  example: '+1122334455'
            examples:
              Update User Profile:
                value:
                  country_code: US
                  first_name: Updated
                  last_name: User
                  phone: '+1122334455'
      responses:
        '200':
          description: Update User Profile Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          account_status:
                            type: string
                            example: active
                          country_code:
                            type: string
                            example: US
                          created_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                          email:
                            type: string
                            example: test@gmail.com
                          first_name:
                            type: string
                            example: Updated
                          id:
                            type: string
                            example: f47ac10b-58cc-4372-a567-0e02b2c3d479
                          is_email_verified:
                            type: boolean
                            example: false
                          last_name:
                            type: string
                            example: User
                          login_provider:
                            type: string
                            example: email
                          phone:
                            type: string
                            example: '+1122334455'
                          profile_picture:
                            nullable: true
                            example: null
                          role:
                            type: string
                            example: user
                          updated_at:
                            type: string
                            example: 2023-12-25T08:30:00Z
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User profile updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update User Profile Success:
                  value:
                    data:
                      user:
                        account_status: active
                        country_code: US
                        created_at: 2023-12-25T08:30:00Z
                        email: test@gmail.com
                        first_name: Updated
                        id: f47ac10b-58cc-4372-a567-0e02b2c3d479
                        is_email_verified: false
                        last_name: User
                        login_provider: email
                        phone: '+1122334455'
                        profile_picture: null
                        role: user
                        updated_at: 2023-12-25T08:30:00Z
                    errors: null
                    message: User profile updated successfully
                    success: true
        '400':
          description: Update User Profile Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      phone:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_phone
                          message:
                            type: string
                            example: Invalid phone number format
                  message:
                    type: string
                    example: Failed to update user profile
                  success:
                    type: boolean
                    example: false
              examples:
                Update User Profile Failure:
                  value:
                    data: null
                    errors:
                      phone:
                        code: invalid_phone
                        message: Invalid phone number format
                    message: Failed to update user profile
                    success: false
      security:
      - bearerAuth: []
  /users/profile/preferences:
    get:
      tags:
      - users
      summary: Get User Preferences
      description: |-
        ## User Preferences

        This endpoint retrieves the user's preferences.
      operationId: getUserPreferences
      responses:
        '200':
          description: Get User Preferences Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      preferences:
                        type: object
                        properties:
                          allow_email_notifications:
                            type: boolean
                            example: false
                          allow_push_notifications:
                            type: boolean
                            example: true
                          app_locale:
                            type: string
                            example: ar
                          app_theme:
                            type: string
                            example: follow device
                          measurement_system:
                            type: string
                            example: imperial
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User preferences retrieved successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Get User Preferences Success:
                  value:
                    data:
                      preferences:
                        allow_email_notifications: false
                        allow_push_notifications: true
                        app_locale: ar
                        app_theme: follow device
                        measurement_system: imperial
                    errors: null
                    message: User preferences retrieved successfully
                    success: true
        '404':
          description: Get User Preferences Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User preferences not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get User Preferences Failure:
                  value:
                    data: null
                    errors: null
                    message: User preferences not found
                    success: false
      security:
      - bearerAuth: []
    patch:
      tags:
      - users
      summary: Update User Preferences
      description: |-
        ## User Preferences

        This endpoint updates the user's preferences.

        ### Request Body

        - `app_locale` (string): The preferred app locale (e.g., en, ar).
        - `app_theme` (string): The preferred app theme (e.g., light, dark, follow device).
        - `allow_email_notifications` (boolean): Allows email notifications if true.
        - `allow_push_notifications` (boolean): Allows push notifications if true.
        - `measurement_system` (string): The preferred measurement system (e.g., metric, imperial).
        - `data_export_format` (string): The preferred data export format (e.g., CSV, JSON).
      operationId: updateUserPreferences
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                allow_email_notifications:
                  type: boolean
                  example: false
                allow_push_notifications:
                  type: boolean
                  example: true
                app_locale:
                  type: string
                  example: ar
                app_theme:
                  type: string
                  example: follow device
                data_export_format:
                  type: string
                  example: JSON
                measurement_system:
                  type: string
                  example: imperial
            examples:
              Update User Preferences:
                value:
                  allow_email_notifications: false
                  allow_push_notifications: true
                  app_locale: ar
                  app_theme: follow device
                  data_export_format: JSON
                  measurement_system: imperial
      responses:
        '200':
          description: Update User Preferences Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      preferences:
                        type: object
                        properties:
                          allow_email_notifications:
                            type: boolean
                            example: false
                          allow_push_notifications:
                            type: boolean
                            example: true
                          app_locale:
                            type: string
                            example: ar
                          app_theme:
                            type: string
                            example: follow device
                          measurement_system:
                            type: string
                            example: imperial
                  errors:
                    nullable: true
                    example: null
                  message:
                    type: string
                    example: User preferences updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update User Preferences Success:
                  value:
                    data:
                      preferences:
                        allow_email_notifications: false
                        allow_push_notifications: true
                        app_locale: ar
                        app_theme: follow device
                        measurement_system: imperial
                    errors: null
                    message: User preferences updated successfully
                    success: true
        '400':
          description: Update User Preferences Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    nullable: true
                    example: null
                  errors:
                    type: object
                    properties:
                      app_theme:
                        type: object
                        properties:
                          code:
                            type: string
                            example: invalid_value
                          message:
                            type: string
                            example: Invalid app theme value
                  message:
                    type: string
                    example: Failed to update user preferences
                  success:
                    type: boolean
                    example: false
              examples:
                Update User Preferences Failure:
                  value:
                    data: null
                    errors:
                      app_theme:
                        code: invalid_value
                        message: Invalid app theme value
                    message: Failed to update user preferences
                    success: false
      security:
      - bearerAuth: []
  /farms:
    get:
      tags:
      - farms
      summary: '[Farm] List Farms'
      description: List farms with optional search, pagination, and limit per page.
      operationId: farmListFarms
      parameters:
      - name: search
        in: query
        schema:
          type: string
          example: '{{search}}'
      - name: page
        in: query
        schema:
          type: string
          example: '{{page}}'
      - name: limit
        in: query
        schema:
          type: string
          example: '{{limit}}'
      responses:
        '200':
          description: List Farms Success
          content:
            text/plain:
              examples:
                List Farms Success:
                  value: |-
                    {
                      "success": true,
                      "data": {
                        "farms": [
                          // List of farms...
                        ],
                        "pagination": {
                          "total_pages": 10,
                          "current_page": 1,
                          "limit_per_page": 10
                        }
                      }
                    }
        '400':
          description: List Farms Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid query parameters
                  success:
                    type: boolean
                    example: false
              examples:
                List Farms Failure:
                  value:
                    message: Invalid query parameters
                    success: false
      security:
      - bearerAuth: []
    post:
      tags:
      - farms
      summary: '[Farm] Create Farm'
      description: Create a new farm with a specified name.
      operationId: farmCreateFarm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                farm_name:
                  type: string
                  example: Green Valley Farm
            examples:
              '[Farm] Create Farm':
                value:
                  farm_name: Green Valley Farm
      responses:
        '201':
          description: Create Farm Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      created_at:
                        type: string
                        example: 2024-01-21T10:00:00Z
                      farm_name:
                        type: string
                        example: Green Valley Farm
                      id:
                        type: string
                        example: generated-farm-id
                  message:
                    type: string
                    example: Farm created successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Create Farm Success:
                  value:
                    data:
                      created_at: 2024-01-21T10:00:00Z
                      farm_name: Green Valley Farm
                      id: generated-farm-id
                    message: Farm created successfully
                    success: true
        '400':
          description: Create Farm Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_name:
                        type: string
                        example: Farm name already exists
                  message:
                    type: string
                    example: Farm creation failed
                  success:
                    type: boolean
                    example: false
              examples:
                Create Farm Failure:
                  value:
                    errors:
                      farm_name: Farm name already exists
                    message: Farm creation failed
                    success: false
      security:
      - bearerAuth: []
  /farms/{farm_id}:
    get:
      tags:
      - farms
      summary: '[Farm] Get Farm Details'
      description: Retrieve details of a specific farm using its ID.
      operationId: farmGetFarmDetails
      responses:
        '200':
          description: Get Farm Details Success
          content:
            text/plain:
              examples:
                Get Farm Details Success:
                  value: |-
                    {
                      "success": true,
                      "data": {
                        "id": "existing-farm-id",
                        "farm_name": "Green Valley Farm",
                        "created_at": "2024-01-21T10:00:00Z"
                        // Other farm details...
                      }
                    }
        '404':
          description: Get Farm Details Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Farm Details Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    put:
      tags:
      - farms
      summary: '[Farm] Update Farm Details'
      description: Update details of a specific farm.
      operationId: farmUpdateFarmDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                farm_name:
                  type: string
                  example: Updated Farm Name
            examples:
              '[Farm] Update Farm Details':
                value:
                  farm_name: Updated Farm Name
      responses:
        '200':
          description: Update Farm Details Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm details updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Farm Details Success:
                  value:
                    message: Farm details updated successfully
                    success: true
        '400':
          description: Update Farm Details Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_name:
                        type: string
                        example: Farm name already exists
                  message:
                    type: string
                    example: Farm update failed
                  success:
                    type: boolean
                    example: false
              examples:
                Update Farm Details Failure:
                  value:
                    errors:
                      farm_name: Farm name already exists
                    message: Farm update failed
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Farm] Delete Farm'
      description: Delete a specific farm using its ID.
      operationId: farmDeleteFarm
      responses:
        '200':
          description: Delete Farm Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Farm Success:
                  value:
                    message: Farm deleted successfully
                    success: true
        '404':
          description: Delete Farm Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Farm Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /farm_users:
    post:
      tags:
      - farms
      summary: '[Farm User] Assign User to Farm'
      description: Assign a user to a farm with a specific role.
      operationId: farmUserAssignUserToFarm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                farm_id:
                  type: string
                  example: farm-uuid
                role:
                  type: string
                  example: viewer
                user_id:
                  type: string
                  example: user-uuid
            examples:
              '[Farm User] Assign User to Farm':
                value:
                  farm_id: farm-uuid
                  role: viewer
                  user_id: user-uuid
      responses:
        '201':
          description: Assign User to Farm Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User assigned to farm successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Assign User to Farm Success:
                  value:
                    message: User assigned to farm successfully
                    success: true
        '400':
          description: Assign User to Farm Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_id:
                        type: string
                        example: Invalid farm ID
                      user_id:
                        type: string
                        example: Invalid user ID
                  message:
                    type: string
                    example: Failed to assign user to farm
                  success:
                    type: boolean
                    example: false
              examples:
                Assign User to Farm Failure:
                  value:
                    errors:
                      farm_id: Invalid farm ID
                      user_id: Invalid user ID
                    message: Failed to assign user to farm
                    success: false
      security:
      - bearerAuth: []
  /farm_users/{farm_id}:
    get:
      tags:
      - farms
      summary: '[Farm User] Get Farm Users'
      description: Retrieve a list of users associated with a specific farm.
      operationId: farmUserGetFarmUsers
      responses:
        '200':
          description: Get Farm Users Success
          content:
            text/plain:
              examples:
                Get Farm Users Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "user_id": "user-uuid",
                          "role": "viewer"
                          // Other user details...
                        }
                        // Additional users...
                      ]
                    }
        '404':
          description: Get Farm Users Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Farm Users Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /farm_users/{farm_user_id}:
    put:
      tags:
      - farms
      summary: '[Farm User] Update Farm User Role'
      description: Update the role of a user within a specific farm.
      operationId: farmUserUpdateFarmUserRole
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: owner
            examples:
              '[Farm User] Update Farm User Role':
                value:
                  role: owner
      responses:
        '200':
          description: Update Farm User Role Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm user role updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Farm User Role Success:
                  value:
                    message: Farm user role updated successfully
                    success: true
        '400':
          description: Update Farm User Role Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      role:
                        type: string
                        example: Invalid role
                  message:
                    type: string
                    example: Failed to update farm user role
                  success:
                    type: boolean
                    example: false
              examples:
                Update Farm User Role Failure:
                  value:
                    errors:
                      role: Invalid role
                    message: Failed to update farm user role
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Farm User] Remove User from Farm'
      description: Remove a user from a specific farm.
      operationId: farmUserRemoveUserFromFarm
      responses:
        '200':
          description: Remove User from Farm Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User removed from farm successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Remove User from Farm Success:
                  value:
                    message: User removed from farm successfully
                    success: true
        '404':
          description: Remove User from Farm Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm user not found
                  success:
                    type: boolean
                    example: false
              examples:
                Remove User from Farm Failure:
                  value:
                    message: Farm user not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_user_id
      in: path
      required: true
      schema:
        type: string
  /farm_boundaries:
    post:
      tags:
      - farms
      summary: '[Farm Boundaries] Define Farm Boundaries'
      description: Define the boundaries of a farm using a series of latitude and longitude points.
      operationId: farmBoundariesDefineFarmBoundaries
      requestBody:
        content:
          application/json:
            examples:
              '[Farm Boundaries] Define Farm Boundaries':
                value: |-
                  {
                    "farm_id": "farm-uuid",
                    "boundaries": [
                      { "latitude": 34.0522, "longitude": -118.2437 },
                      // Additional boundary points...
                    ]
                  }
      responses:
        '201':
          description: Define Farm Boundaries Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm boundaries defined successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Define Farm Boundaries Success:
                  value:
                    message: Farm boundaries defined successfully
                    success: true
        '400':
          description: Define Farm Boundaries Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_id:
                        type: string
                        example: Invalid farm ID
                  message:
                    type: string
                    example: Failed to define farm boundaries
                  success:
                    type: boolean
                    example: false
              examples:
                Define Farm Boundaries Failure:
                  value:
                    errors:
                      farm_id: Invalid farm ID
                    message: Failed to define farm boundaries
                    success: false
      security:
      - bearerAuth: []
  /farm_boundaries/{farm_id}:
    get:
      tags:
      - farms
      summary: '[Farm Boundaries] Get Farm Boundaries'
      description: Retrieve the boundaries of a specific farm.
      operationId: farmBoundariesGetFarmBoundaries
      responses:
        '200':
          description: Get Farm Boundaries Success
          content:
            text/plain:
              examples:
                Get Farm Boundaries Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        { "latitude": 34.0522, "longitude": -118.2437 },
                        // Additional boundary points...
                      ]
                    }
        '404':
          description: Get Farm Boundaries Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Farm Boundaries Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    put:
      tags:
      - farms
      summary: '[Farm Boundaries] Update Farm Boundaries'
      description: Update the boundaries of a specific farm.
      operationId: farmBoundariesUpdateFarmBoundaries
      requestBody:
        content:
          application/json:
            examples:
              '[Farm Boundaries] Update Farm Boundaries':
                value: |-
                  {
                    "boundaries": [
                      { "latitude": 34.0522, "longitude": -118.2437 },
                      // Updated boundary points...
                    ]
                  }
      responses:
        '200':
          description: Update Farm Boundaries Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm boundaries updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Farm Boundaries Success:
                  value:
                    message: Farm boundaries updated successfully
                    success: true
        '400':
          description: Update Farm Boundaries Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_id:
                        type: string
                        example: Invalid farm ID
                  message:
                    type: string
                    example: Failed to update farm boundaries
                  success:
                    type: boolean
                    example: false
              examples:
                Update Farm Boundaries Failure:
                  value:
                    errors:
                      farm_id: Invalid farm ID
                    message: Failed to update farm boundaries
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Farm Boundaries] Delete Farm Boundaries'
      description: Delete the boundaries of a specific farm.
      operationId: farmBoundariesDeleteFarmBoundaries
      responses:
        '200':
          description: Delete Farm Boundaries Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm boundaries deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Farm Boundaries Success:
                  value:
                    message: Farm boundaries deleted successfully
                    success: true
        '404':
          description: Delete Farm Boundaries Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Farm Boundaries Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /farm_properties:
    post:
      tags:
      - farms
      summary: '[Farm Properties] Add Farm Property'
      description: Add a property to a specific farm.
      operationId: farmPropertiesAddFarmProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                farm_id:
                  type: string
                  example: farm-uuid
                property_id:
                  type: string
                  example: property-uuid
                property_value:
                  type: string
                  example: value
            examples:
              '[Farm Properties] Add Farm Property':
                value:
                  farm_id: farm-uuid
                  property_id: property-uuid
                  property_value: value
      responses:
        '201':
          description: Add Farm Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm property added successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Farm Property Success:
                  value:
                    message: Farm property added successfully
                    success: true
        '400':
          description: Add Farm Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_id:
                        type: string
                        example: Invalid farm ID
                      property_id:
                        type: string
                        example: Invalid property ID
                  message:
                    type: string
                    example: Failed to add farm property
                  success:
                    type: boolean
                    example: false
              examples:
                Add Farm Property Failure:
                  value:
                    errors:
                      farm_id: Invalid farm ID
                      property_id: Invalid property ID
                    message: Failed to add farm property
                    success: false
      security:
      - bearerAuth: []
  /farm_properties/{farm_id}:
    get:
      tags:
      - farms
      summary: '[Farm Properties] Get Farm Properties'
      description: Retrieve properties of a specific farm.
      operationId: farmPropertiesGetFarmProperties
      responses:
        '200':
          description: Get Farm Properties Success
          content:
            text/plain:
              examples:
                Get Farm Properties Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "property_id": "property-uuid",
                          "property_value": "value"
                          // Other property details...
                        }
                        // Additional properties...
                      ]
                    }
        '404':
          description: Get Farm Properties Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Farm Properties Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /farm_properties/{property_id}:
    put:
      tags:
      - farms
      summary: '[Farm Properties] Update Farm Property'
      description: Update a property of a specific farm.
      operationId: farmPropertiesUpdateFarmProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property_value:
                  type: string
                  example: new value
            examples:
              '[Farm Properties] Update Farm Property':
                value:
                  property_value: new value
      responses:
        '200':
          description: Update Farm Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm property updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Farm Property Success:
                  value:
                    message: Farm property updated successfully
                    success: true
        '400':
          description: Update Farm Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_id:
                        type: string
                        example: Invalid property ID
                  message:
                    type: string
                    example: Failed to update farm property
                  success:
                    type: boolean
                    example: false
              examples:
                Update Farm Property Failure:
                  value:
                    errors:
                      property_id: Invalid property ID
                    message: Failed to update farm property
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Farm Properties] Delete Farm Property'
      description: Delete a property from a specific farm.
      operationId: farmPropertiesDeleteFarmProperty
      responses:
        '200':
          description: Delete Farm Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm property deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Farm Property Success:
                  value:
                    message: Farm property deleted successfully
                    success: true
        '404':
          description: Delete Farm Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm property not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Farm Property Failure:
                  value:
                    message: Farm property not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: property_id
      in: path
      required: true
      schema:
        type: string
  /farm_weather:
    post:
      tags:
      - farms
      summary: '[Farm Weather] Create Weather Forecast'
      description: Create a new weather forecast for a specific farm.
      operationId: farmWeatherCreateWeatherForecast
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                farm_id:
                  type: string
                  example: farm-uuid
                forecast_date:
                  type: string
                  example: 2024-06-01
            examples:
              '[Farm Weather] Create Weather Forecast':
                value:
                  farm_id: farm-uuid
                  forecast_date: 2024-06-01
      responses:
        '201':
          description: Create Weather Forecast Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      farm_id:
                        type: string
                        example: farm-uuid
                      forecast_date:
                        type: string
                        example: 2024-06-01
                      id:
                        type: string
                        example: new-weather-forecast-id
                  message:
                    type: string
                    example: Weather forecast created successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Create Weather Forecast Success:
                  value:
                    data:
                      farm_id: farm-uuid
                      forecast_date: 2024-06-01
                      id: new-weather-forecast-id
                    message: Weather forecast created successfully
                    success: true
        '400':
          description: Create Weather Forecast Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_id:
                        type: string
                        example: Invalid farm ID
                  message:
                    type: string
                    example: Failed to create weather forecast
                  success:
                    type: boolean
                    example: false
              examples:
                Create Weather Forecast Failure:
                  value:
                    errors:
                      farm_id: Invalid farm ID
                    message: Failed to create weather forecast
                    success: false
      security:
      - bearerAuth: []
  /farm_weather/{farm_id}:
    get:
      tags:
      - farms
      summary: '[Farm Weather] Get Weather Forecasts'
      description: Retrieve weather forecasts for a specific farm.
      operationId: farmWeatherGetWeatherForecasts
      responses:
        '200':
          description: Get Weather Forecasts Success
          content:
            text/plain:
              examples:
                Get Weather Forecasts Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "weather-forecast-id",
                          "forecast_date": "2024-06-01"
                          // Additional forecast details...
                        }
                        // Additional forecasts...
                      ]
                    }
        '404':
          description: Get Weather Forecasts Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather forecasts not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Weather Forecasts Failure:
                  value:
                    message: Weather forecasts not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /farm_weather/{weather_id}:
    put:
      tags:
      - farms
      summary: '[Farm Weather] Update Weather Forecast'
      description: Update an existing weather forecast for a specific farm.
      operationId: farmWeatherUpdateWeatherForecast
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                forecast_date:
                  type: string
                  example: 2024-06-02
            examples:
              '[Farm Weather] Update Weather Forecast':
                value:
                  forecast_date: 2024-06-02
      responses:
        '200':
          description: Update Weather Forecast Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather forecast updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Weather Forecast Success:
                  value:
                    message: Weather forecast updated successfully
                    success: true
        '400':
          description: Update Weather Forecast Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      weather_id:
                        type: string
                        example: Invalid weather forecast ID
                  message:
                    type: string
                    example: Failed to update weather forecast
                  success:
                    type: boolean
                    example: false
              examples:
                Update Weather Forecast Failure:
                  value:
                    errors:
                      weather_id: Invalid weather forecast ID
                    message: Failed to update weather forecast
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Farm Weather] Delete Weather Forecast'
      description: Delete a specific weather forecast for a farm.
      operationId: farmWeatherDeleteWeatherForecast
      responses:
        '200':
          description: Delete Weather Forecast Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather forecast deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Weather Forecast Success:
                  value:
                    message: Weather forecast deleted successfully
                    success: true
        '404':
          description: Delete Weather Forecast Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather forecast not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Weather Forecast Failure:
                  value:
                    message: Weather forecast not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: weather_id
      in: path
      required: true
      schema:
        type: string
  /farm_weather_properties:
    post:
      tags:
      - farms
      summary: '[Farm Weather Property] Add Weather Property'
      description: Add a property to a specific farm weather forecast.
      operationId: farmWeatherPropertyAddWeatherProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property_id:
                  type: string
                  example: property-uuid
                property_value:
                  type: string
                  example: value
                weather_id:
                  type: string
                  example: weather-forecast-id
            examples:
              '[Farm Weather Property] Add Weather Property':
                value:
                  property_id: property-uuid
                  property_value: value
                  weather_id: weather-forecast-id
      responses:
        '201':
          description: Add Weather Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-weather-property-id
                      message:
                        type: string
                        example: Weather property added successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Weather Property Success:
                  value:
                    data:
                      id: new-weather-property-id
                      message: Weather property added successfully
                    success: true
        '400':
          description: Add Weather Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_id:
                        type: string
                        example: Invalid property ID
                      weather_id:
                        type: string
                        example: Invalid weather forecast ID
                  message:
                    type: string
                    example: Failed to add weather property
                  success:
                    type: boolean
                    example: false
              examples:
                Add Weather Property Failure:
                  value:
                    errors:
                      property_id: Invalid property ID
                      weather_id: Invalid weather forecast ID
                    message: Failed to add weather property
                    success: false
      security:
      - bearerAuth: []
  /farm_weather_properties/{weather_id}:
    get:
      tags:
      - farms
      summary: '[Farm Weather Property] Get Weather Properties'
      description: Retrieve properties associated with a specific farm weather forecast.
      operationId: farmWeatherPropertyGetWeatherProperties
      responses:
        '200':
          description: Get Weather Properties Success
          content:
            text/plain:
              examples:
                Get Weather Properties Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "weather-property-id",
                          "property_value": "value"
                          // Other property details...
                        }
                        // Additional weather properties...
                      ]
                    }
        '404':
          description: Get Weather Properties Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather properties not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Weather Properties Failure:
                  value:
                    message: Weather properties not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: weather_id
      in: path
      required: true
      schema:
        type: string
  /farm_weather_properties/{weather_property_id}:
    put:
      tags:
      - farms
      summary: '[Farm Weather Property] Update Weather Property'
      description: Update a property associated with a specific farm weather forecast.
      operationId: farmWeatherPropertyUpdateWeatherProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property_value:
                  type: string
                  example: updated value
            examples:
              '[Farm Weather Property] Update Weather Property':
                value:
                  property_value: updated value
      responses:
        '200':
          description: Update Weather Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather property updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Weather Property Success:
                  value:
                    message: Weather property updated successfully
                    success: true
        '400':
          description: Update Weather Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      weather_property_id:
                        type: string
                        example: Invalid weather property ID
                  message:
                    type: string
                    example: Failed to update weather property
                  success:
                    type: boolean
                    example: false
              examples:
                Update Weather Property Failure:
                  value:
                    errors:
                      weather_property_id: Invalid weather property ID
                    message: Failed to update weather property
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Farm Weather Property] Delete Weather Property'
      description: Delete a property from a specific farm weather forecast.
      operationId: farmWeatherPropertyDeleteWeatherProperty
      responses:
        '200':
          description: Delete Weather Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather property deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Weather Property Success:
                  value:
                    message: Weather property deleted successfully
                    success: true
        '404':
          description: Delete Weather Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Weather property not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Weather Property Failure:
                  value:
                    message: Weather property not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: weather_property_id
      in: path
      required: true
      schema:
        type: string
  /element_farm_properties:
    post:
      tags:
      - farms
      summary: '[Element Farm Property] Add Property'
      description: Add a property to a specific element on a specific farm.
      operationId: elementFarmPropertyAddProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                element_id:
                  type: string
                  example: element-uuid
                farm_id:
                  type: string
                  example: farm-uuid
                property_id:
                  type: string
                  example: property-uuid
                property_value:
                  type: string
                  example: value
            examples:
              '[Element Farm Property] Add Property':
                value:
                  element_id: element-uuid
                  farm_id: farm-uuid
                  property_id: property-uuid
                  property_value: value
      responses:
        '201':
          description: Add Element Farm Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-element-farm-property-id
                      message:
                        type: string
                        example: Element farm property added successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Element Farm Property Success:
                  value:
                    data:
                      id: new-element-farm-property-id
                      message: Element farm property added successfully
                    success: true
        '400':
          description: Add Element Farm Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      element_id:
                        type: string
                        example: Invalid element ID
                      farm_id:
                        type: string
                        example: Invalid farm ID
                      property_id:
                        type: string
                        example: Invalid property ID
                  message:
                    type: string
                    example: Failed to add property to element farm
                  success:
                    type: boolean
                    example: false
              examples:
                Add Element Farm Property Failure:
                  value:
                    errors:
                      element_id: Invalid element ID
                      farm_id: Invalid farm ID
                      property_id: Invalid property ID
                    message: Failed to add property to element farm
                    success: false
      security:
      - bearerAuth: []
  /element_farm_properties/{element_id}/{farm_id}:
    get:
      tags:
      - farms
      summary: '[Element Farm Property] Get Properties'
      description: Retrieve properties associated with a specific element on a specific farm.
      operationId: elementFarmPropertyGetProperties
      responses:
        '200':
          description: Get Element Farm Properties Success
          content:
            text/plain:
              examples:
                Get Element Farm Properties Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "property-id",
                          "property_value": "value"
                          // Other property details...
                        }
                        // Additional properties...
                      ]
                    }
        '404':
          description: Get Element Farm Properties Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element farm properties not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Element Farm Properties Failure:
                  value:
                    message: Element farm properties not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_id
      in: path
      required: true
      schema:
        type: string
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /element_farm_properties/{property_id}:
    put:
      tags:
      - farms
      summary: '[Element Farm Property] Update Property'
      description: Update a property of a specific element on a specific farm.
      operationId: elementFarmPropertyUpdateProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property_value:
                  type: string
                  example: updated value
            examples:
              '[Element Farm Property] Update Property':
                value:
                  property_value: updated value
      responses:
        '200':
          description: Update Element Farm Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element farm property updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Element Farm Property Success:
                  value:
                    message: Element farm property updated successfully
                    success: true
        '400':
          description: Update Element Farm Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_id:
                        type: string
                        example: Invalid element farm property ID
                  message:
                    type: string
                    example: Failed to update element farm property
                  success:
                    type: boolean
                    example: false
              examples:
                Update Element Farm Property Failure:
                  value:
                    errors:
                      property_id: Invalid element farm property ID
                    message: Failed to update element farm property
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farms
      summary: '[Element Farm Property] Delete Property'
      description: Delete a property from a specific element on a specific farm.
      operationId: elementFarmPropertyDeleteProperty
      responses:
        '200':
          description: Delete Element Farm Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element farm property deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Element Farm Property Success:
                  value:
                    message: Element farm property deleted successfully
                    success: true
        '404':
          description: Delete Element Farm Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element farm property not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Element Farm Property Failure:
                  value:
                    message: Element farm property not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: property_id
      in: path
      required: true
      schema:
        type: string
  /elements:
    post:
      tags:
      - elements
      summary: '[Element] Create Element'
      description: Create a new element instance.
      operationId: elementCreateElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: A large, deciduous tree
                element_type_id:
                  type: string
                  example: element-type-id
                image:
                  type: string
                  example: oak-tree-image-path
                name:
                  type: string
                  example: Oak Tree
                shape:
                  type: string
                  example: circular
            examples:
              '[Element] Create Element':
                value:
                  description: A large, deciduous tree
                  element_type_id: element-type-id
                  image: oak-tree-image-path
                  name: Oak Tree
                  shape: circular
      responses:
        '201':
          description: Create Element Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      description:
                        type: string
                        example: A large, deciduous tree
                      id:
                        type: string
                        example: new-element-id
                      image:
                        type: string
                        example: oak-tree-image-path
                      name:
                        type: string
                        example: Oak Tree
                      shape:
                        type: string
                        example: circular
                  message:
                    type: string
                    example: Element created successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Create Element Success:
                  value:
                    data:
                      description: A large, deciduous tree
                      id: new-element-id
                      image: oak-tree-image-path
                      name: Oak Tree
                      shape: circular
                    message: Element created successfully
                    success: true
        '400':
          description: Create Element Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Element with this name already exists
                  message:
                    type: string
                    example: Failed to create element
                  success:
                    type: boolean
                    example: false
              examples:
                Create Element Failure:
                  value:
                    errors:
                      name: Element with this name already exists
                    message: Failed to create element
                    success: false
      security:
      - bearerAuth: []
  /elements/{element_id}:
    get:
      tags:
      - elements
      summary: '[Element] Get Element Details'
      description: Retrieve details of a specific element.
      operationId: elementGetElementDetails
      responses:
        '200':
          description: Get Element Details Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      description:
                        type: string
                        example: A large, deciduous tree
                      id:
                        type: string
                        example: element-id
                      image:
                        type: string
                        example: oak-tree-image-path
                      name:
                        type: string
                        example: Oak Tree
                      shape:
                        type: string
                        example: circular
                  success:
                    type: boolean
                    example: true
              examples:
                Get Element Details Success:
                  value:
                    data:
                      description: A large, deciduous tree
                      id: element-id
                      image: oak-tree-image-path
                      name: Oak Tree
                      shape: circular
                    success: true
        '404':
          description: Get Element Details Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Element Details Failure:
                  value:
                    message: Element not found
                    success: false
      security:
      - bearerAuth: []
    put:
      tags:
      - elements
      summary: '[Element] Update Element'
      description: Update an existing element.
      operationId: elementUpdateElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Updated description
                image:
                  type: string
                  example: updated-oak-tree-image-path
                name:
                  type: string
                  example: Updated Oak Tree
                shape:
                  type: string
                  example: rectangular
            examples:
              '[Element] Update Element':
                value:
                  description: Updated description
                  image: updated-oak-tree-image-path
                  name: Updated Oak Tree
                  shape: rectangular
      responses:
        '200':
          description: Update Element Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Element Success:
                  value:
                    message: Element updated successfully
                    success: true
        '400':
          description: Update Element Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Element with this name already exists
                  message:
                    type: string
                    example: Failed to update element
                  success:
                    type: boolean
                    example: false
              examples:
                Update Element Failure:
                  value:
                    errors:
                      name: Element with this name already exists
                    message: Failed to update element
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - elements
      summary: '[Element] Delete Element'
      description: Delete a specific element.
      operationId: elementDeleteElement
      responses:
        '200':
          description: Delete Element Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Element Success:
                  value:
                    message: Element deleted successfully
                    success: true
        '404':
          description: Delete Element Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Element Failure:
                  value:
                    message: Element not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_id
      in: path
      required: true
      schema:
        type: string
  /element_properties:
    post:
      tags:
      - elements
      summary: '[Element Property] Add Element Property'
      description: Add a property to a specific element.
      operationId: elementPropertyAddElementProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                element_id:
                  type: string
                  example: element-uuid
                property_id:
                  type: string
                  example: property-uuid
                property_value:
                  type: string
                  example: value
            examples:
              '[Element Property] Add Element Property':
                value:
                  element_id: element-uuid
                  property_id: property-uuid
                  property_value: value
      responses:
        '201':
          description: Add Element Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-element-property-id
                      message:
                        type: string
                        example: Element property added successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Element Property Success:
                  value:
                    data:
                      id: new-element-property-id
                      message: Element property added successfully
                    success: true
        '400':
          description: Add Element Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      element_id:
                        type: string
                        example: Invalid element ID
                      property_id:
                        type: string
                        example: Invalid property ID
                  message:
                    type: string
                    example: Failed to add property to element
                  success:
                    type: boolean
                    example: false
              examples:
                Add Element Property Failure:
                  value:
                    errors:
                      element_id: Invalid element ID
                      property_id: Invalid property ID
                    message: Failed to add property to element
                    success: false
      security:
      - bearerAuth: []
  /element_properties/{element_id}:
    get:
      tags:
      - elements
      summary: '[Element Property] Get Element Properties'
      description: Retrieve properties of a specific element.
      operationId: elementPropertyGetElementProperties
      responses:
        '200':
          description: Get Element Properties Success
          content:
            text/plain:
              examples:
                Get Element Properties Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "property-id",
                          "property_value": "value"
                          // Other property details...
                        }
                        // Additional properties...
                      ]
                    }
        '404':
          description: Get Element Properties Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element properties not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Element Properties Failure:
                  value:
                    message: Element properties not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_id
      in: path
      required: true
      schema:
        type: string
  /element_properties/{element_property_id}:
    put:
      tags:
      - elements
      summary: '[Element Property] Update Element Property'
      description: Update a property of a specific element.
      operationId: elementPropertyUpdateElementProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property_value:
                  type: string
                  example: updated value
            examples:
              '[Element Property] Update Element Property':
                value:
                  property_value: updated value
      responses:
        '200':
          description: Update Element Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element property updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Element Property Success:
                  value:
                    message: Element property updated successfully
                    success: true
        '400':
          description: Update Element Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      element_property_id:
                        type: string
                        example: Invalid element property ID
                  message:
                    type: string
                    example: Failed to update element property
                  success:
                    type: boolean
                    example: false
              examples:
                Update Element Property Failure:
                  value:
                    errors:
                      element_property_id: Invalid element property ID
                    message: Failed to update element property
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - elements
      summary: '[Element Property] Delete Element Property'
      description: Delete a property from a specific element.
      operationId: elementPropertyDeleteElementProperty
      responses:
        '200':
          description: Delete Element Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element property deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Element Property Success:
                  value:
                    message: Element property deleted successfully
                    success: true
        '404':
          description: Delete Element Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element property not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Element Property Failure:
                  value:
                    message: Element property not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_property_id
      in: path
      required: true
      schema:
        type: string
  /element_ages:
    post:
      tags:
      - elements
      summary: '[Element Age] Record Element Age'
      description: Record the age and growth measurements of an element.
      operationId: elementAgeRecordElementAge
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: number
                  example: 5
                crown_diameter:
                  type: number
                  example: 2.5
                crown_height:
                  type: number
                  example: 3.0
                element_id:
                  type: string
                  example: element-uuid
                expected_yield_pieces:
                  type: number
                  example: 100
                expected_yield_weight:
                  type: number
                  example: 250
                root_depth:
                  type: number
                  example: 1.0
                root_diameter:
                  type: number
                  example: 1.5
                trunk_diameter:
                  type: number
                  example: 0.5
                trunk_height:
                  type: number
                  example: 2.0
            examples:
              '[Element Age] Record Element Age':
                value:
                  age: 5
                  crown_diameter: 2.5
                  crown_height: 3.0
                  element_id: element-uuid
                  expected_yield_pieces: 100
                  expected_yield_weight: 250
                  root_depth: 1.0
                  root_diameter: 1.5
                  trunk_diameter: 0.5
                  trunk_height: 2.0
      responses:
        '201':
          description: Record Element Age Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-element-age-id
                      message:
                        type: string
                        example: Element age recorded successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Record Element Age Success:
                  value:
                    data:
                      id: new-element-age-id
                      message: Element age recorded successfully
                    success: true
        '400':
          description: Record Element Age Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      element_id:
                        type: string
                        example: Invalid element ID
                  message:
                    type: string
                    example: Failed to record element age
                  success:
                    type: boolean
                    example: false
              examples:
                Record Element Age Failure:
                  value:
                    errors:
                      element_id: Invalid element ID
                    message: Failed to record element age
                    success: false
      security:
      - bearerAuth: []
  /element_ages/{element_id}:
    get:
      tags:
      - elements
      summary: '[Element Age] Get Element Ages'
      description: Retrieve age and growth data for a specific element.
      operationId: elementAgeGetElementAges
      responses:
        '200':
          description: Get Element Ages Success
          content:
            text/plain:
              examples:
                Get Element Ages Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "age": 5,
                          "crown_diameter": 2.5,
                          "crown_height": 3.0,
                          // Other age details...
                        }
                        // Additional age records...
                      ]
                    }
        '404':
          description: Get Element Ages Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element age data not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Element Ages Failure:
                  value:
                    message: Element age data not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_id
      in: path
      required: true
      schema:
        type: string
  /element_ages/{element_age_id}:
    put:
      tags:
      - elements
      summary: '[Element Age] Update Element Age'
      description: Update the age and growth measurements of an element.
      operationId: elementAgeUpdateElementAge
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: number
                  example: 6
                crown_diameter:
                  type: number
                  example: 2.8
                crown_height:
                  type: number
                  example: 3.2
                expected_yield_pieces:
                  type: number
                  example: 120
                expected_yield_weight:
                  type: number
                  example: 300
                root_depth:
                  type: number
                  example: 1.1
                root_diameter:
                  type: number
                  example: 1.6
                trunk_diameter:
                  type: number
                  example: 0.6
                trunk_height:
                  type: number
                  example: 2.2
            examples:
              '[Element Age] Update Element Age':
                value:
                  age: 6
                  crown_diameter: 2.8
                  crown_height: 3.2
                  expected_yield_pieces: 120
                  expected_yield_weight: 300
                  root_depth: 1.1
                  root_diameter: 1.6
                  trunk_diameter: 0.6
                  trunk_height: 2.2
      responses:
        '200':
          description: Update Element Age Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element age updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Element Age Success:
                  value:
                    message: Element age updated successfully
                    success: true
        '400':
          description: Update Element Age Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      element_age_id:
                        type: string
                        example: Invalid element age ID
                  message:
                    type: string
                    example: Failed to update element age
                  success:
                    type: boolean
                    example: false
              examples:
                Update Element Age Failure:
                  value:
                    errors:
                      element_age_id: Invalid element age ID
                    message: Failed to update element age
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - elements
      summary: '[Element Age] Delete Element Age'
      description: Delete the age and growth data of a specific element.
      operationId: elementAgeDeleteElementAge
      responses:
        '200':
          description: Delete Element Age Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element age deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Element Age Success:
                  value:
                    message: Element age deleted successfully
                    success: true
        '404':
          description: Delete Element Age Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element age data not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Element Age Failure:
                  value:
                    message: Element age data not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_age_id
      in: path
      required: true
      schema:
        type: string
  /farm_elements:
    post:
      tags:
      - farm-elements
      summary: '[Farm Element] Add Element to Farm'
      description: Add an element to a specific farm.
      operationId: farmElementAddElementToFarm
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center_position_x:
                  type: string
                  example: '100'
                center_position_y:
                  type: string
                  example: '200'
                count:
                  type: number
                  example: 1
                drawing_order:
                  type: number
                  example: 1
                element_id:
                  type: string
                  example: element-uuid
                farm_id:
                  type: string
                  example: farm-uuid
                length_x_axis:
                  type: number
                  example: 50
                length_y_axis:
                  type: number
                  example: 30
                placement_date:
                  type: string
                  example: 2024-01-25
                spacing:
                  nullable: true
                  example: null
            examples:
              '[Farm Element] Add Element to Farm':
                value:
                  center_position_x: '100'
                  center_position_y: '200'
                  count: 1
                  drawing_order: 1
                  element_id: element-uuid
                  farm_id: farm-uuid
                  length_x_axis: 50
                  length_y_axis: 30
                  placement_date: 2024-01-25
                  spacing: null
      responses:
        '201':
          description: Add Element to Farm Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-farm-element-id
                      message:
                        type: string
                        example: Element added to farm successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Element to Farm Success:
                  value:
                    data:
                      id: new-farm-element-id
                      message: Element added to farm successfully
                    success: true
        '400':
          description: Add Element to Farm Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      element_id:
                        type: string
                        example: Invalid element ID
                      farm_id:
                        type: string
                        example: Invalid farm ID
                  message:
                    type: string
                    example: Failed to add element to farm
                  success:
                    type: boolean
                    example: false
              examples:
                Add Element to Farm Failure:
                  value:
                    errors:
                      element_id: Invalid element ID
                      farm_id: Invalid farm ID
                    message: Failed to add element to farm
                    success: false
      security:
      - bearerAuth: []
  /farm_elements/{farm_id}:
    get:
      tags:
      - farm-elements
      summary: '[Farm Element] Get Farm Elements'
      description: Retrieve a list of elements associated with a specific farm.
      operationId: farmElementGetFarmElements
      responses:
        '200':
          description: Get Farm Elements Success
          content:
            text/plain:
              examples:
                Get Farm Elements Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "farm-element-id",
                          "element_id": "element-uuid",
                          "center_position_x": "100",
                          "center_position_y": "200"
                          // Additional details...
                        }
                        // Additional farm elements...
                      ]
                    }
        '404':
          description: Get Farm Elements Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Farm Elements Failure:
                  value:
                    message: Farm not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /farm_elements/{farm_element_id}:
    put:
      tags:
      - farm-elements
      summary: '[Farm Element] Update Farm Element'
      description: Update an existing farm element.
      operationId: farmElementUpdateFarmElement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                center_position_x:
                  type: string
                  example: '150'
                center_position_y:
                  type: string
                  example: '250'
                count:
                  type: number
                  example: 2
                drawing_order:
                  type: number
                  example: 2
                length_x_axis:
                  type: number
                  example: 60
                length_y_axis:
                  type: number
                  example: 40
                spacing:
                  type: number
                  example: 10
            examples:
              '[Farm Element] Update Farm Element':
                value:
                  center_position_x: '150'
                  center_position_y: '250'
                  count: 2
                  drawing_order: 2
                  length_x_axis: 60
                  length_y_axis: 40
                  spacing: 10
      responses:
        '200':
          description: Update Farm Element Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm element updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Farm Element Success:
                  value:
                    message: Farm element updated successfully
                    success: true
        '400':
          description: Update Farm Element Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_element_id:
                        type: string
                        example: Invalid farm element ID
                  message:
                    type: string
                    example: Failed to update farm element
                  success:
                    type: boolean
                    example: false
              examples:
                Update Farm Element Failure:
                  value:
                    errors:
                      farm_element_id: Invalid farm element ID
                    message: Failed to update farm element
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farm-elements
      summary: '[Farm Element] Remove Element from Farm'
      description: Remove a specific element from a farm.
      operationId: farmElementRemoveElementFromFarm
      responses:
        '200':
          description: Remove Element from Farm Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element removed from farm successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Remove Element from Farm Success:
                  value:
                    message: Element removed from farm successfully
                    success: true
        '404':
          description: Remove Element from Farm Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm element not found
                  success:
                    type: boolean
                    example: false
              examples:
                Remove Element from Farm Failure:
                  value:
                    message: Farm element not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_element_id
      in: path
      required: true
      schema:
        type: string
  /farm_element_properties:
    post:
      tags:
      - farm-elements
      summary: '[Farm Element Property] Add Property'
      description: Add a property to a specific farm element.
      operationId: farmElementPropertyAddProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                farm_element_id:
                  type: string
                  example: farm-element-uuid
                property_id:
                  type: string
                  example: property-uuid
                property_value:
                  type: string
                  example: value
            examples:
              '[Farm Element Property] Add Property':
                value:
                  farm_element_id: farm-element-uuid
                  property_id: property-uuid
                  property_value: value
      responses:
        '201':
          description: Add Farm Element Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-farm-element-property-id
                      message:
                        type: string
                        example: Farm element property added successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Farm Element Property Success:
                  value:
                    data:
                      id: new-farm-element-property-id
                      message: Farm element property added successfully
                    success: true
        '400':
          description: Add Farm Element Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      farm_element_id:
                        type: string
                        example: Invalid farm element ID
                  message:
                    type: string
                    example: Failed to add property to farm element
                  success:
                    type: boolean
                    example: false
              examples:
                Add Farm Element Property Failure:
                  value:
                    errors:
                      farm_element_id: Invalid farm element ID
                    message: Failed to add property to farm element
                    success: false
      security:
      - bearerAuth: []
  /farm_element_properties/{farm_element_id}:
    get:
      tags:
      - farm-elements
      summary: '[Farm Element Property] Get Properties'
      description: Retrieve properties of a specific farm element.
      operationId: farmElementPropertyGetProperties
      responses:
        '200':
          description: Get Farm Element Properties Success
          content:
            text/plain:
              examples:
                Get Farm Element Properties Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "property-id",
                          "property_value": "value"
                          // Other property details...
                        }
                        // Additional properties...
                      ]
                    }
        '404':
          description: Get Farm Element Properties Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm element properties not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Farm Element Properties Failure:
                  value:
                    message: Farm element properties not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_element_id
      in: path
      required: true
      schema:
        type: string
  /farm_element_properties/{property_id}:
    put:
      tags:
      - farm-elements
      summary: '[Farm Element Property] Update Property'
      description: Update a property of a specific farm element.
      operationId: farmElementPropertyUpdateProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                property_value:
                  type: string
                  example: updated value
            examples:
              '[Farm Element Property] Update Property':
                value:
                  property_value: updated value
      responses:
        '200':
          description: Update Farm Element Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm element property updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Farm Element Property Success:
                  value:
                    message: Farm element property updated successfully
                    success: true
        '400':
          description: Update Farm Element Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_id:
                        type: string
                        example: Invalid farm element property ID
                  message:
                    type: string
                    example: Failed to update farm element property
                  success:
                    type: boolean
                    example: false
              examples:
                Update Farm Element Property Failure:
                  value:
                    errors:
                      property_id: Invalid farm element property ID
                    message: Failed to update farm element property
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - farm-elements
      summary: '[Farm Element Property] Delete Property'
      description: Delete a property from a specific farm element.
      operationId: farmElementPropertyDeleteProperty
      responses:
        '200':
          description: Delete Farm Element Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm element property deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Farm Element Property Success:
                  value:
                    message: Farm element property deleted successfully
                    success: true
        '404':
          description: Delete Farm Element Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Farm element property not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Farm Element Property Failure:
                  value:
                    message: Farm element property not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: property_id
      in: path
      required: true
      schema:
        type: string
  /element_types:
    get:
      tags:
      - element-types
      summary: '[Element Type] Get Element Types'
      description: Retrieve a list of all element types.
      operationId: elementTypeGetElementTypes
      responses:
        '200':
          description: Get Element Types Success
          content:
            text/plain:
              examples:
                Get Element Types Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "element-type-id",
                          "name": "tree",
                          "description": "A type of plant",
                          "image": "image-path"
                        }
                        // Additional element types...
                      ]
                    }
        '404':
          description: Get Element Types Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element types not found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Element Types Failure:
                  value:
                    message: Element types not found
                    success: false
      security:
      - bearerAuth: []
    post:
      tags:
      - element-types
      summary: '[Element Type] Create Element Type'
      description: Create a new element type.
      operationId: elementTypeCreateElementType
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: A type of plant
                image:
                  type: string
                  example: image-path
                name:
                  type: string
                  example: tree
            examples:
              '[Element Type] Create Element Type':
                value:
                  description: A type of plant
                  image: image-path
                  name: tree
      responses:
        '201':
          description: Create Element Type Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      description:
                        type: string
                        example: A type of plant
                      id:
                        type: string
                        example: new-element-type-id
                      image:
                        type: string
                        example: image-path
                      name:
                        type: string
                        example: tree
                  message:
                    type: string
                    example: Element type created successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Create Element Type Success:
                  value:
                    data:
                      description: A type of plant
                      id: new-element-type-id
                      image: image-path
                      name: tree
                    message: Element type created successfully
                    success: true
        '400':
          description: Create Element Type Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Element type already exists
                  message:
                    type: string
                    example: Failed to create element type
                  success:
                    type: boolean
                    example: false
              examples:
                Create Element Type Failure:
                  value:
                    errors:
                      name: Element type already exists
                    message: Failed to create element type
                    success: false
      security:
      - bearerAuth: []
  /element_types/{element_type_id}:
    put:
      tags:
      - element-types
      summary: '[Element Type] Update Element Type'
      description: Update an existing element type.
      operationId: elementTypeUpdateElementType
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Updated description
                image:
                  type: string
                  example: updated-image-path
                name:
                  type: string
                  example: updated tree
            examples:
              '[Element Type] Update Element Type':
                value:
                  description: Updated description
                  image: updated-image-path
                  name: updated tree
      responses:
        '200':
          description: Update Element Type Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element type updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Element Type Success:
                  value:
                    message: Element type updated successfully
                    success: true
        '400':
          description: Update Element Type Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Element type with this name already exists
                  message:
                    type: string
                    example: Failed to update element type
                  success:
                    type: boolean
                    example: false
              examples:
                Update Element Type Failure:
                  value:
                    errors:
                      name: Element type with this name already exists
                    message: Failed to update element type
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - element-types
      summary: '[Element Type] Delete Element Type'
      description: Delete a specific element type.
      operationId: elementTypeDeleteElementType
      responses:
        '200':
          description: Delete Element Type Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element type deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Element Type Success:
                  value:
                    message: Element type deleted successfully
                    success: true
        '404':
          description: Delete Element Type Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element type not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Element Type Failure:
                  value:
                    message: Element type not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: element_type_id
      in: path
      required: true
      schema:
        type: string
  /equations:
    get:
      tags:
      - equations
      summary: '[Equation] Get Equations'
      description: Retrieve a list of all equations.
      operationId: equationGetEquations
      responses:
        '200':
          description: Get Equations Success
          content:
            text/plain:
              examples:
                Get Equations Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "equation-id",
                          "label": "Growth Rate",
                          "name": "growth_rate",
                          "formula": "height * age / 10"
                          // Other equation details...
                        }
                        // Additional equations...
                      ]
                    }
        '404':
          description: Get Equations Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No equations found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Equations Failure:
                  value:
                    message: No equations found
                    success: false
      security:
      - bearerAuth: []
    post:
      tags:
      - equations
      summary: '[Equation] Add Equation'
      description: Add a new equation for dynamic property calculations.
      operationId: equationAddEquation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                formula:
                  type: string
                  example: height * age / 10
                label:
                  type: string
                  example: Growth Rate
                name:
                  type: string
                  example: growth_rate
            examples:
              '[Equation] Add Equation':
                value:
                  formula: height * age / 10
                  label: Growth Rate
                  name: growth_rate
      responses:
        '201':
          description: Add Equation Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-equation-id
                      message:
                        type: string
                        example: Equation added successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Add Equation Success:
                  value:
                    data:
                      id: new-equation-id
                      message: Equation added successfully
                    success: true
        '400':
          description: Add Equation Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Equation name already exists
                  message:
                    type: string
                    example: Failed to add equation
                  success:
                    type: boolean
                    example: false
              examples:
                Add Equation Failure:
                  value:
                    errors:
                      name: Equation name already exists
                    message: Failed to add equation
                    success: false
      security:
      - bearerAuth: []
  /equations/{equation_id}:
    put:
      tags:
      - equations
      summary: '[Equation] Update Equation'
      description: Update an existing equation.
      operationId: equationUpdateEquation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                formula:
                  type: string
                  example: updated_formula
                label:
                  type: string
                  example: Updated Growth Rate
            examples:
              '[Equation] Update Equation':
                value:
                  formula: updated_formula
                  label: Updated Growth Rate
      responses:
        '200':
          description: Update Equation Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Equation updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Equation Success:
                  value:
                    message: Equation updated successfully
                    success: true
        '400':
          description: Update Equation Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      equation_id:
                        type: string
                        example: Invalid equation ID
                  message:
                    type: string
                    example: Failed to update equation
                  success:
                    type: boolean
                    example: false
              examples:
                Update Equation Failure:
                  value:
                    errors:
                      equation_id: Invalid equation ID
                    message: Failed to update equation
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - equations
      summary: '[Equation] Delete Equation'
      description: Delete a specific equation.
      operationId: equationDeleteEquation
      responses:
        '200':
          description: Delete Equation Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Equation deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Equation Success:
                  value:
                    message: Equation deleted successfully
                    success: true
        '404':
          description: Delete Equation Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Equation not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Equation Failure:
                  value:
                    message: Equation not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: equation_id
      in: path
      required: true
      schema:
        type: string
  /properties:
    get:
      tags:
      - properties
      summary: '[Property] Get Properties'
      description: Retrieve a list of all defined properties.
      operationId: propertyGetProperties
      responses:
        '200':
          description: Get Properties Success
          content:
            text/plain:
              examples:
                Get Properties Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "property-id",
                          "name": "soil_moisture",
                          "type": "number",
                          "unit": "%",
                          "min_value": 0,
                          "max_value": 100
                          // Other property details...
                        }
                        // Additional properties...
                      ]
                    }
        '404':
          description: Get Properties Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No properties found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Properties Failure:
                  value:
                    message: No properties found
                    success: false
      security:
      - bearerAuth: []
    post:
      tags:
      - properties
      summary: '[Property] Define Property'
      description: Define a new property that can be associated with various tables in the database.
      operationId: propertyDefineProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                allowed_values:
                  nullable: true
                  example: null
                max_value:
                  type: number
                  example: 100
                min_value:
                  type: number
                  example: 0
                name:
                  type: string
                  example: soil_moisture
                type:
                  type: string
                  example: number
                unit:
                  type: string
                  example: '%'
            examples:
              '[Property] Define Property':
                value:
                  allowed_values: null
                  max_value: 100
                  min_value: 0
                  name: soil_moisture
                  type: number
                  unit: '%'
      responses:
        '201':
          description: Define Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-property-id
                      message:
                        type: string
                        example: Property defined successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Define Property Success:
                  value:
                    data:
                      id: new-property-id
                      message: Property defined successfully
                    success: true
        '400':
          description: Define Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Property name already exists
                  message:
                    type: string
                    example: Failed to define property
                  success:
                    type: boolean
                    example: false
              examples:
                Define Property Failure:
                  value:
                    errors:
                      name: Property name already exists
                    message: Failed to define property
                    success: false
      security:
      - bearerAuth: []
  /properties/{property_id}:
    put:
      tags:
      - properties
      summary: '[Property] Update Property'
      description: Update an existing property.
      operationId: propertyUpdateProperty
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                allowed_values:
                  nullable: true
                  example: null
                max_value:
                  type: number
                  example: 100
                min_value:
                  type: number
                  example: 0
                name:
                  type: string
                  example: updated_soil_moisture
                type:
                  type: string
                  example: number
                unit:
                  type: string
                  example: '%'
            examples:
              '[Property] Update Property':
                value:
                  allowed_values: null
                  max_value: 100
                  min_value: 0
                  name: updated_soil_moisture
                  type: number
                  unit: '%'
      responses:
        '200':
          description: Update Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Property Success:
                  value:
                    message: Property updated successfully
                    success: true
        '400':
          description: Update Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_id:
                        type: string
                        example: Invalid property ID
                  message:
                    type: string
                    example: Failed to update property
                  success:
                    type: boolean
                    example: false
              examples:
                Update Property Failure:
                  value:
                    errors:
                      property_id: Invalid property ID
                    message: Failed to update property
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - properties
      summary: '[Property] Delete Property'
      description: Delete a specific property.
      operationId: propertyDeleteProperty
      responses:
        '200':
          description: Delete Property Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Property Success:
                  value:
                    message: Property deleted successfully
                    success: true
        '404':
          description: Delete Property Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Property Failure:
                  value:
                    message: Property not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: property_id
      in: path
      required: true
      schema:
        type: string
  /property_tables:
    get:
      tags:
      - properties
      summary: '[Property Table] Get Property Table Associations'
      description: Retrieve a list of all property table associations.
      operationId: propertyTableGetPropertyTableAssociations
      responses:
        '200':
          description: Get Property Table Associations Success
          content:
            text/plain:
              examples:
                Get Property Table Associations Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "id": "property-table-id",
                          "table": "farms",
                          "property_id": "property-uuid",
                          "fallback_table": "users"
                          // Other association details...
                        }
                        // Additional associations...
                      ]
                    }
        '404':
          description: Get Property Table Associations Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No property table associations found
                  success:
                    type: boolean
                    example: false
              examples:
                Get Property Table Associations Failure:
                  value:
                    message: No property table associations found
                    success: false
      security:
      - bearerAuth: []
    post:
      tags:
      - properties
      summary: '[Property Table] Create Property Table Association'
      description: Create a new association between a property and a table.
      operationId: propertyTableCreatePropertyTableAssociation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fallback_table:
                  type: string
                  example: users
                property_id:
                  type: string
                  example: property-uuid
                table:
                  type: string
                  example: farms
            examples:
              '[Property Table] Create Property Table Association':
                value:
                  fallback_table: users
                  property_id: property-uuid
                  table: farms
      responses:
        '201':
          description: Create Property Table Association Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: new-property-table-id
                      message:
                        type: string
                        example: Property table association created successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Create Property Table Association Success:
                  value:
                    data:
                      id: new-property-table-id
                      message: Property table association created successfully
                    success: true
        '400':
          description: Create Property Table Association Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_id:
                        type: string
                        example: Invalid property ID
                      table:
                        type: string
                        example: Invalid table name
                  message:
                    type: string
                    example: Failed to create property table association
                  success:
                    type: boolean
                    example: false
              examples:
                Create Property Table Association Failure:
                  value:
                    errors:
                      property_id: Invalid property ID
                      table: Invalid table name
                    message: Failed to create property table association
                    success: false
      security:
      - bearerAuth: []
  /property_tables/{property_table_id}:
    put:
      tags:
      - properties
      summary: '[Property Table] Update Property Table Association'
      description: Update an existing property table association.
      operationId: propertyTableUpdatePropertyTableAssociation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fallback_table:
                  type: string
                  example: updated_users
                table:
                  type: string
                  example: updated_farms
            examples:
              '[Property Table] Update Property Table Association':
                value:
                  fallback_table: updated_users
                  table: updated_farms
      responses:
        '200':
          description: Update Property Table Association Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property table association updated successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Update Property Table Association Success:
                  value:
                    message: Property table association updated successfully
                    success: true
        '400':
          description: Update Property Table Association Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      property_table_id:
                        type: string
                        example: Invalid property table ID
                      table:
                        type: string
                        example: Invalid table name
                  message:
                    type: string
                    example: Failed to update property table association
                  success:
                    type: boolean
                    example: false
              examples:
                Update Property Table Association Failure:
                  value:
                    errors:
                      property_table_id: Invalid property table ID
                      table: Invalid table name
                    message: Failed to update property table association
                    success: false
      security:
      - bearerAuth: []
    delete:
      tags:
      - properties
      summary: '[Property Table] Delete Property Table Association'
      description: Delete a specific property table association.
      operationId: propertyTableDeletePropertyTableAssociation
      responses:
        '200':
          description: Delete Property Table Association Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property table association deleted successfully
                  success:
                    type: boolean
                    example: true
              examples:
                Delete Property Table Association Success:
                  value:
                    message: Property table association deleted successfully
                    success: true
        '404':
          description: Delete Property Table Association Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property table association not found
                  success:
                    type: boolean
                    example: false
              examples:
                Delete Property Table Association Failure:
                  value:
                    message: Property table association not found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: property_table_id
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/shuffle-grow-bed/{element_id}:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Shuffle Grow Bed'
      description: Get a list of recommended plants to plant inside the grow bed associated with the provided element ID.
      operationId: farmPlanningShuffleGrowBed
      responses:
        '200':
          description: Shuffle Grow Bed Success
          content:
            text/plain:
              examples:
                Shuffle Grow Bed Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "element": {
                            "id": "element-uuid",
                            "name": "Tomato",
                            "image": "tomato-image-path",
                            "type": "Veggie",
                            "recommended_periods": {
                              "planting_period": {
                                "startDate": "2024-03-01",
                                "endDate": "2024-04-15"
                              },
                              "harvesting_period": {
                                "startDate": "2024-07-01",
                                "endDate": "2024-09-30"
                              }
                            }
                          }
                          // Additional recommended elements...
                        }
                      ]
                    }
        '404':
          description: Shuffle Grow Bed Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Element not found or no recommendations available
                  success:
                    type: boolean
                    example: false
              examples:
                Shuffle Grow Bed Failure:
                  value:
                    message: Element not found or no recommendations available
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
    - name: element_id
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/farm-future-elements:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Farm Future Elements'
      description: Get a forecast or plan of the elements expected to be present on the farm at a specified future date. This can include elements like plants, their growth stages, and any other relevant farm items.
      operationId: farmPlanningFarmFutureElements
      parameters:
      - name: future_date
        in: query
        schema:
          type: string
          example: '{future_date}'
        description: The future date for which the farm elements are being forecasted.
      responses:
        '200':
          description: Farm Future Elements Success
          content:
            text/plain:
              examples:
                Farm Future Elements Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "element_id": "element-uuid",
                          "name": "Tomato",
                          "expected_stage": "Harvesting",
                          "image": "tomato-image-path",
                          "additional_info": {
                            "expected_yield": "200 pieces",
                            "condition": "Optimal"
                          }
                        },
                        // Additional future elements...
                      ]
                    }
        '404':
          description: Farm Future Elements Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No data available for the provided future date
                  success:
                    type: boolean
                    example: false
              examples:
                Farm Future Elements Failure:
                  value:
                    message: No data available for the provided future date
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/grow-beds:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Get All Grow Beds with Plants'
      description: Retrieve all grow beds in the farm along with the plants inside each grow bed. Plants are grouped by the grow bed they belong to.
      operationId: farmPlanningGetAllGrowBedsWithPlants
      responses:
        '200':
          description: Get All Grow Beds Success
          content:
            text/plain:
              examples:
                Get All Grow Beds Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "grow_bed_id": "grow-bed-uuid",
                          "grow_bed_name": "Grow Bed 1",
                          "plants": [
                            {
                              "element_id": "plant-uuid",
                              "name": "Tomato",
                              "image": "tomato-image-path",
                              "type": "Veggie"
                              // Additional plant details...
                            }
                            // Additional plants in the same grow bed...
                          ]
                        }
                        // Additional grow beds...
                      ]
                    }
        '404':
          description: Get All Grow Beds Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No grow beds found
                  success:
                    type: boolean
                    example: false
              examples:
                Get All Grow Beds Failure:
                  value:
                    message: No grow beds found
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/month-harvesting-info:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Month Harvesting Info'
      description: Get a list of elements (plants or other types) expected to be harvested in the specified month for a given farm, along with details like quantity, expected yield, actual yield, and labor.
      operationId: farmPlanningMonthHarvestingInfo
      parameters:
      - name: month
        in: query
        schema:
          type: string
          example: '{month}'
        description: The specified month for which harvesting information is requested.
      responses:
        '200':
          description: Month Harvesting Info Success
          content:
            text/plain:
              examples:
                Month Harvesting Info Success:
                  value: |-
                    {
                      "success": true,
                      "data": [
                        {
                          "element_id": "element-uuid",
                          "element_name": "Tomato",
                          "quantity": 100,
                          "expected_yield": 150,
                          "actual_yield": 120,
                          "labour": 5
                          // Additional element harvesting details...
                        }
                        // Additional elements...
                      ]
                    }
        '404':
          description: Month Harvesting Info Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Harvesting information not found for the specified month
                  success:
                    type: boolean
                    example: false
              examples:
                Month Harvesting Info Failure:
                  value:
                    message: Harvesting information not found for the specified month
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/statistics:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Farm Statistics'
      description: Get various statistics of the farm, including planting area, pathway area, total yield, and other relevant information.
      operationId: farmPlanningFarmStatistics
      responses:
        '200':
          description: Farm Statistics Success
          content:
            text/plain:
              examples:
                Farm Statistics Success:
                  value: |-
                    {
                      "success": true,
                      "data": {
                        "planting_area": "1000 sqm",
                        "pathway_area": "200 sqm",
                        "total_yield": "5000 kg",
                        "water_usage": "5000 liters",
                        "labor_hours": "100 hours"
                        // Additional statistics...
                      }
                    }
        '404':
          description: Farm Statistics Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Statistics not found for the specified farm ID
                  success:
                    type: boolean
                    example: false
              examples:
                Farm Statistics Failure:
                  value:
                    message: Statistics not found for the specified farm ID
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/plant-recommended-periods/{elementId}:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Plant Recommended Periods'
      description: Get the recommended planting and harvesting periods for a specific plant (element) within a farm.
      operationId: farmPlanningPlantRecommendedPeriods
      responses:
        '200':
          description: Plant Recommended Periods Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      harvesting_period:
                        type: object
                        properties:
                          end_date:
                            type: string
                            example: 2024-09-15
                          start_date:
                            type: string
                            example: 2024-08-01
                      planting_period:
                        type: object
                        properties:
                          end_date:
                            type: string
                            example: 2024-04-15
                          start_date:
                            type: string
                            example: 2024-03-01
                  success:
                    type: boolean
                    example: true
              examples:
                Plant Recommended Periods Success:
                  value:
                    data:
                      harvesting_period:
                        end_date: 2024-09-15
                        start_date: 2024-08-01
                      planting_period:
                        end_date: 2024-04-15
                        start_date: 2024-03-01
                    success: true
        '404':
          description: Plant Recommended Periods Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Recommended periods not found for the specified element
                  success:
                    type: boolean
                    example: false
              examples:
                Plant Recommended Periods Failure:
                  value:
                    message: Recommended periods not found for the specified element
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
    - name: elementId
      in: path
      required: true
      schema:
        type: string
  /planning/{farm_id}/expected-yield/{farm_element_id}:
    get:
      tags:
      - planning
      summary: '[Farm Planning] Expected Yield for Farm Element'
      description: Get the expected yield for a specific farm element (e.g., plant, crop) within a farm.
      operationId: farmPlanningExpectedYieldForFarmElement
      responses:
        '200':
          description: Expected Yield Success
          content:
            text/plain:
              examples:
                Expected Yield Success:
                  value: |-
                    {
                      "success": true,
                      "data": {
                        "expected_yield_pieces": 1000,
                        "expected_yield_weight": "500 kg",
                        "element_id": "farm-element-uuid",
                        "element_name": "Tomato"
                        // Additional yield details...
                      }
                    }
        '404':
          description: Expected Yield Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Expected yield not found for the specified farm element
                  success:
                    type: boolean
                    example: false
              examples:
                Expected Yield Failure:
                  value:
                    message: Expected yield not found for the specified farm element
                    success: false
      security:
      - bearerAuth: []
    parameters:
    - name: farm_id
      in: path
      required: true
      schema:
        type: string
    - name: farm_element_id
      in: path
      required: true
      schema:
        type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
- name: auth
  description: The endpoints related to the user authentication (login, register, verify email, change password...etc.)
- name: users
  description: The endpoints related to managing the users from the admin and the user profile/preferences in the app.
- name: farms
  description: The endpoints related to the farm, farm boundaries, farm users, farm properties, farm weather, element farm properties.
- name: elements
  description: The endpoints related to the elements (plants/objects), element properties, and element ages.
- name: farm-elements
  description: The endpoints related to the farm elements and farm element properties.
- name: element-types
  description: The endpoints related to the element types and sub types.
- name: equations
  description: The endpoints related to the dynamic equations used to calculate some outputs and statistics.
- name: properties
  description: The endpoints related to the dynamic properties used for the tables. Each property has a list of allowed tables it can be used with.
- name: planning
  description: The endpoints related to the farm planning, from planning what to grow, suggesting planting and harvesting periods, getting farm statistics and productivity.

