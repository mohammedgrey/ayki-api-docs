{
	"info": {
		"_postman_id": "59c4ab47-18e3-4aae-9db1-436f4312a4d6",
		"name": "AYKI",
		"description": "This serves as a business and technical documentation for the AYKI API server.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27664548",
		"_collection_link": "https://solar-shadow-95955.postman.co/workspace/AYKI~585b895e-3532-46e9-8994-cca3f50c5621/collection/27664548-59c4ab47-18e3-4aae-9db1-436f4312a4d6?action=share&source=collection_link&creator=27664548"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "[User] User Registration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\":\"test\",\n    \"last_name\":\"test\",\n    \"email\":\"test@gmail.com\",\n    \"password\":\"1234qwerA!\",\n    \"phone\":\"+96170987654\",\n    \"country_code\": \"LB\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/register",
							"path": [
								"auth",
								"register"
							]
						},
						"description": "## Register User\n\nThis endpoint allows the user to register by providing their first name, last name, email, password, phone, and country code.\n\n## User/Role\n\nuser\n\n### Request Body\n\n- `first_name` (string, required): The first name of the user.\n- `last_name` (string, required): The last name of the user.\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password for the user account.\n- `phone` (string, required): The phone number of the user.\n- `country_code` (string, required): The country code for the user's phone number."
					},
					"response": [
						{
							"name": "[User] User Registration (200)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/auth/register",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg\",\n        \"user\": {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\":\"test\",\n            \"last_name\":\"test\",\n            \"email\":\"test@gmail.com\",\n            \"phone\":\"+96170987654\",\n            \"country_code\": \"LB\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": false,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\":\"User registered successfully\"\n}"
						},
						{
							"name": "[User] User Registration (400)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/auth/register",
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\":{\n        \"email\": {\n            \"code\": \"email_already_taken\",\n            \"message\": \"The email provided is associated with another account.\"\n        }\n    },\n    \"message\": \"User regisration failed\"\n}"
						}
					]
				},
				{
					"name": "[User] User Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"test@gmail.com\",\n    \"password\":\"1234qwerA!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/login",
							"path": [
								"auth",
								"login"
							]
						},
						"description": "## User Login\n\nThis endpoint allows the user to log in by providing their email and password.\n\n## User/Role\n\nuser\n\n### Request Body\n\n- `email` (string, required): The email address of the user.\n- `password` (string, required): The password for the user account."
					},
					"response": [
						{
							"name": "[User] User Login (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"test@gmail.com\",\n    \"password\":\"1234qwerA!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/login",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg\",\n        \"user\": {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\":\"test\",\n            \"last_name\":\"test\",\n            \"email\":\"test@gmail.com\",\n            \"phone\":\"+96170987654\",\n            \"country_code\": \"LB\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": true,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\":\"User logged in successfully\"\n}"
						},
						{
							"name": "[User] User Login (401)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"test@gmail.com\",\n    \"password\":\"wrongpassword\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/login",
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"email\": {\n            \"code\": \"invalid_credentials\",\n            \"message\": \"Invalid email or password. Please try again.\"\n        },\n         \"password\": {\n            \"code\": \"invalid_credentials\",\n            \"message\": \"Invalid email or password. Please try again.\"\n        }\n    },\n    \"message\": \"User login failed\"\n}"
						}
					]
				},
				{
					"name": "[User] Social Authentication",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token\":\"YOUR_SOCIAL_ACCESS_TOKEN\",\n    \"provider\": \"facebook\" // or \"google\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/social",
							"path": [
								"auth",
								"social"
							]
						},
						"description": "## Social Authentication\n\nThis endpoint allows the user to continue with social authentication by providing their access token and provider (either `facebook` or `google`).\n\n## User/Role\n\nuser\n\n### Request Body\n\n- `access_token` (string, required): The access token received from the social platform (Facebook or Google).\n- `provider` (string, required): The social platform provider (either `facebook` or `google`)."
					},
					"response": [
						{
							"name": "[User] Social Authentication (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\":\"YOUR_SOCIAL_ACCESS_TOKEN\",\n    \"provider\": \"facebook\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/social",
									"path": [
										"auth",
										"social"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg\",\n        \"user\": {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\":\"test\",\n            \"last_name\":\"test\",\n            \"email\":\"test@gmail.com\",\n            \"phone\":\"+96170987654\",\n            \"country_code\": \"LB\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"facebook\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": true,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\":\"User logged in successfully\"\n}"
						},
						{
							"name": "[User] Social Authentication (401)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\":\"INVALID_SOCIAL_ACCESS_TOKEN\",\n    \"provider\": \"facebook\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/social",
									"path": [
										"auth",
										"social"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"authentication\": {\n            \"code\": \"invalid_token\",\n            \"message\": \"Invalid access token. Please try again.\"\n        }\n    },\n    \"message\": \"User login failed\"\n}"
						}
					]
				},
				{
					"name": "[User] Logout",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/logout",
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "## User Logout\n\nThis endpoint allows the user to logout from their account.\n\n## User/Role\n\nuser\n\n### Request Body\n\n- No specific body required for logout."
					},
					"response": [
						{
							"name": "[User] Logout (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/logout",
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\":\"User logged out successfully\",\n    \"errors\": null,\n    \"data\": null\n}"
						},
						{
							"name": "[User] Logout (401)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/logout",
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Unauthorized. Please log in to perform this action.\",\n    \"errors\": null,\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "[User] Forgot Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"user@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/forgot-password",
							"path": [
								"auth",
								"forgot-password"
							]
						},
						"description": "## Forgot Password\n\nThis endpoint allows the user to initiate the process of resetting their password by providing their email.\n\n## User/Role\n\npublic\n\n### Request Body\n\n- `email` (string, required): The email address associated with the user's account."
					},
					"response": [
						{
							"name": "[User] Forgot Password (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/forgot-password",
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\":\"Password reset instructions sent to your email\",\n    \"errors\": null,\n    \"data\": null\n}"
						},
						{
							"name": "[User] Forgot Password (400)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/forgot-password",
									"path": [
										"auth",
										"forgot-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid email format. Please provide a valid email address.\",\n    \"errors\": {\n        \"email\":{\n            \"code\": \"invalid_email\",\n            \"message\": \"Invalid email format. Please provide a valid email address.\"\n        }\n    },\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "[User] Reset Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"user@example.com\",\n    \"reset_token\": \"RESET_TOKEN\",\n    \"new_password\": \"new_password_here\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/reset-password",
							"path": [
								"auth",
								"reset-password"
							]
						},
						"description": "## Reset Password\n\nThis endpoint allows the user to reset their password by providing their email, reset token, and new password.\n\n## User/Role\n\npublic\n\n### Request Body\n\n- `email` (string, required): The email address associated with the user's account.\n- `reset_token` (string, required): The token sent to the user's email for password reset.\n- `new_password` (string, required): The new password for the user's account."
					},
					"response": [
						{
							"name": "[User] Reset Password (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\",\n    \"reset_token\": \"RESET_TOKEN\",\n    \"new_password\": \"new_password_here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/reset-password",
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\":\"Password has been reset successfully\",\n    \"errors\": null,\n    \"data\": null\n}"
						},
						{
							"name": "[User] Reset Password (400)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\",\n    \"reset_token\": \"\",\n    \"new_password\": \"new_password_here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/reset-password",
									"path": [
										"auth",
										"reset-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid or expired reset token. Please request a new one.\",\n    \"errors\": {\n        \"token\":{\n            \"code\": \"invalid_token\",\n            \"message\": \"Invalid or expired reset token. Please request a new one.\"\n        }\n    },\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "[User] Resend Verification Email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"user@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/resend-verification-email",
							"path": [
								"auth",
								"resend-verification-email"
							]
						},
						"description": "## Resend Verification Email\n\nThis endpoint allows the user to request a resend of the verification email by providing their email.\n\n## User/Role\n\npublic\n\n### Request Body\n\n- `email` (string, required): The email address associated with the user's account."
					},
					"response": [
						{
							"name": "[User] Resend Verification Email (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/resend-verification-email",
									"path": [
										"auth",
										"resend-verification-email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\":\"Verification email resent successfully\",\n    \"errors\": null,\n    \"data\": null\n}"
						},
						{
							"name": "[User] Resend Verification Email (400)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/resend-verification-email",
									"path": [
										"auth",
										"resend-verification-email"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid email format. Please provide a valid email address.\",\n     \"errors\": {\n        \"email\":{\n            \"code\": \"invalid_email\",\n            \"message\": \"Invalid email format. Please provide a valid email address.\"\n        }\n    },\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "[User] Verify Email",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"user@example.com\",\n    \"verification_code\": \"VERIFICATION_CODE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/verify-email",
							"path": [
								"auth",
								"verify-email"
							]
						},
						"description": "## Verify Email\n\nThis endpoint allows the user to verify their email by providing their email and verification code.\n\n## User/Role\n\npublic\n\n### Request Body\n\n- `email` (string, required): The email address associated with the user's account.\n- `verification_code` (string, required): The verification code sent to the user's email for email verification."
					},
					"response": [
						{
							"name": "[User] Verify Email (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\",\n    \"verification_code\": \"VERIFICATION_CODE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/verify-email",
									"path": [
										"auth",
										"verify-email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\":\"Email verified successfully\",\n    \"errors\": null,\n    \"data\": null\n}"
						},
						{
							"name": "[User] Verify Email (400)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\",\n    \"verification_code\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/verify-email",
									"path": [
										"auth",
										"verify-email"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid verification code. Please provide a valid verification code.\",\n    \"errors\": {\n        \"verification_code\":{\n            \"code\": \"invalid_code\",\n            \"message\": \"Invalid verification code. Please provide a valid verification code.\"\n        }\n    },\n    \"data\": null\n}"
						}
					]
				},
				{
					"name": "[User] Change Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"user@example.com\",\n    \"current_password\": \"current_password_here\",\n    \"new_password\": \"new_password_here\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/auth/change-password",
							"path": [
								"auth",
								"change-password"
							]
						},
						"description": "## Change Password\n\nThis endpoint allows the user to change their password by providing their email, current password, and new password.\n\n## User/Role\n\nuser\n\n### Request Body\n\n- `email` (string, required): The email address associated with the user's account.\n- `current_password` (string, required): The user's current password.\n- `new_password` (string, required): The new password for the user's account."
					},
					"response": [
						{
							"name": "[User] Change Password (200)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\",\n    \"current_password\": \"current_password_here\",\n    \"new_password\": \"new_password_here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/change-password",
									"path": [
										"auth",
										"change-password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\":\"Password changed successfully\",\n    \"errors\": null,\n    \"data\": null\n}"
						},
						{
							"name": "[User] Change Password (401)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"user@example.com\",\n    \"current_password\": \"incorrect_password\",\n    \"new_password\": \"new_password_here\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/auth/change-password",
									"path": [
										"auth",
										"change-password"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Incorrect current password. Please try again.\",\n    \"errors\":{\n        \"current_password\":{\n            \"code\": \"incorrect_current_password\",\n            \"message\": \"Incorrect current password. Please try again.\"\n        }\n    },\n    \"data\": null\n}"
						}
					]
				}
			],
			"description": "The endpoints related to the user authentication (login, register, verify email, change password...etc.)"
		},
		{
			"name": "users",
			"item": [
				{
					"name": "[Admin] Get Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/users?search=query&page=1&limit_per_page=10",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "search",
									"value": "query"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit_per_page",
									"value": "10"
								}
							]
						},
						"description": "## Admin Only\n\nThis endpoint retrieves a list of users.\n\n### Query Parameters:\n- `search` (string): Search query\n- `page` (number): Page number\n- `limit_per_page` (number): Limit per page"
					},
					"response": [
						{
							"name": "[Admin] Get Users Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users?search=query&page=1&limit_per_page=10",
									"path": [
										"users"
									],
									"query": [
										{
											"key": "search",
											"value": "query"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit_per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"items\": [\n            {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\":\"test\",\n            \"last_name\":\"test\",\n            \"email\":\"test@gmail.com\",\n            \"phone\":\"+96170987654\",\n            \"country_code\": \"LB\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": false,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n            }\n        ],\n        \"pagination\": {\n            \"total_pages\": 5,\n            \"limit_per_page\": 10,\n            \"current_page\": 1,\n            \"last_page\": 5\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Users retrieved successfully\"\n}"
						},
						{
							"name": "[Admin] Get Users Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users?search=query&page=1&limit_per_page=10",
									"path": [
										"users"
									],
									"query": [
										{
											"key": "search",
											"value": "query"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit_per_page",
											"value": "10"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Unauthorized. Admin access required.\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\":\"test\",\n    \"last_name\":\"test\",\n    \"email\":\"test@gmail.com\",\n    \"password\":\"1234qwerA!\",\n    \"phone\":\"+96170987654\",\n    \"country_code\": \"LB\",\n    \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/users",
							"path": [
								"users"
							]
						},
						"description": "## Admin Only\n\nThis endpoint creates a new user.\n\n### Request Body\n\n- `email` (string, required): Email address\n- `password` (string, required): User password\n- `role` (string, required): User role"
					},
					"response": [
						{
							"name": "[Admin] Create User Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"new_password\",\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users",
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user\":{\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\":\"test\",\n            \"last_name\":\"test\",\n            \"email\":\"test@gmail.com\",\n            \"phone\":\"+96170987654\",\n            \"country_code\": \"LB\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": false,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"User created successfully\"\n}"
						},
						{
							"name": "[Admin] Create User Failure",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"new_password\",\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users",
									"path": [
										"users"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Invalid request body\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete User by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/users/{{userId}}",
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "## Admin Only\n\nThis endpoint deletes a user by their ID."
					},
					"response": [
						{
							"name": "[Admin] Delete User Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/users/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"users",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User deleted successfully\"\n}"
						},
						{
							"name": "[Admin] Delete User Failure",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/users/invalidUserId",
									"path": [
										"users",
										"invalidUserId"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User ID not found\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Update User by ID",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\":\"updated_test\",\n    \"last_name\":\"updated_test\",\n    \"email\":\"updated_test@gmail.com\",\n    \"phone\":\"+96170987654\",\n    \"country_code\": \"LB\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/users/{{userId}}",
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "## Admin Only\n\nThis endpoint updates a user's information by their ID.\n\n### Request Body\n\n- `first_name` (string): Updated first name\n- `last_name` (string): Updated last name\n- `email` (string): Updated email address\n- `phone` (string): Updated phone number\n- `country_code` (string): Updated country code"
					},
					"response": [
						{
							"name": "[Admin] Update User Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\":\"updated_test\",\n    \"last_name\":\"updated_test\",\n    \"email\":\"updated_test@gmail.com\",\n    \"phone\":\"+96170987654\",\n    \"country_code\": \"LB\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"users",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user\":{\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\":\"updated_test\",\n            \"last_name\":\"updated_test\",\n            \"email\":\"updated_test@gmail.com\",\n            \"phone\":\"+96170987654\",\n            \"country_code\": \"LB\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"facebook\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": true,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"User updated successfully\"\n}"
						},
						{
							"name": "[Admin] Update User Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\":\"updated_test\",\n    \"last_name\":\"updated_test\",\n    \"email\":\"updated_test@gmail.com\",\n    \"phone\":\"+96170987654\",\n    \"country_code\": \"LB\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/invalidUserId",
									"path": [
										"users",
										"invalidUserId"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User ID not found\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/users/{{userId}}",
							"path": [
								"users",
								"{{userId}}"
							]
						},
						"description": "## Admin Only\n\nThis endpoint retrieves user details by their ID."
					},
					"response": [
						{
							"name": "[Admin] Get User Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"users",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user\":{\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"email\": \"john@example.com\",\n            \"phone\": \"+1234567890\",\n            \"country_code\": \"US\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\": \"user\",\n            \"profile_picture\": \"https://example.com/profile.jpg\",\n            \"is_verified\": true,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n\n    },\n    \"errors\": null,\n    \"message\": \"User details retrieved successfully\"\n}"
						},
						{
							"name": "[Admin] Get User Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users/invalidUserId",
									"path": [
										"users",
										"invalidUserId"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User ID not found\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Suspend User by ID",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"is_suspended\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/users/{{userId}}/suspend",
							"path": [
								"users",
								"{{userId}}",
								"suspend"
							]
						},
						"description": "## Admin Only\n\nThis endpoint suspends a user by their ID.\n\n### Request Body\n\n- `is_suspended` (boolean): Set to `true` to suspend the user."
					},
					"response": [
						{
							"name": "[Admin] Suspend User Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_suspended\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/f47ac10b-58cc-4372-a567-0e02b2c3d479/suspend",
									"path": [
										"users",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479",
										"suspend"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User suspended successfully\"\n}"
						},
						{
							"name": "[Admin] Suspend User Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"is_suspended\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/invalidUserId/suspend",
									"path": [
										"users",
										"invalidUserId",
										"suspend"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User ID not found\"\n}"
						}
					]
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/users/profile",
							"path": [
								"users",
								"profile"
							]
						},
						"description": "## User Profile\n\nThis endpoint retrieves the user's profile details."
					},
					"response": [
						{
							"name": "Get User Profile Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users/profile",
									"path": [
										"users",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"user\":{\n            \"id\": \"123456\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"email\": \"john@example.com\",\n            \"phone\": \"+1234567890\",\n            \"country_code\": \"US\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\": \"user\",\n            \"profile_picture\": \"https://example.com/profile.jpg\",\n            \"is_verified\": true,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"User profile retrieved successfully\"\n}"
						},
						{
							"name": "Get User Profile Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users/profile",
									"path": [
										"users",
										"profile"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User profile not found\"\n}"
						}
					]
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\",\n    \"phone\": \"+1122334455\",\n    \"country_code\": \"US\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/users/profile",
							"path": [
								"users",
								"profile"
							]
						},
						"description": "## User Profile\n\nThis endpoint updates the user's profile details.\n\n### Request Body\n\n- `first_name` (string): The updated first name.\n- `last_name` (string): The updated last name.\n- `phone` (string): The updated phone number.\n- `country_code` (string): The updated country code."
					},
					"response": [
						{
							"name": "Update User Profile Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\",\n    \"phone\": \"+1122334455\",\n    \"country_code\": \"US\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/profile",
									"path": [
										"users",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n         \"user\":{\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"email\":\"test@gmail.com\",\n            \"first_name\": \"Updated\",\n            \"last_name\": \"User\",\n            \"phone\": \"+1122334455\",\n            \"country_code\": \"US\",\n            \"account_status\": \"active\",\n            \"login_provider\": \"email\",\n            \"role\":\"user\",\n            \"profile_picture\": null,\n            \"is_verified\": false,\n            \"created_at\": \"2023-12-25T08:30:00Z\",\n            \"updated_at\": \"2023-12-25T08:30:00Z\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"User profile updated successfully\"\n}"
						},
						{
							"name": "Update User Profile Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Updated\",\n    \"last_name\": \"User\",\n    \"phone\": \"+1122334455\",\n    \"country_code\": \"US\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/profile",
									"path": [
										"users",
										"profile"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"phone\": {\n            \"code\": \"invalid_phone\",\n            \"message\": \"Invalid phone number format\"\n        }\n    },\n    \"message\": \"Failed to update user profile\"\n}"
						}
					]
				},
				{
					"name": "Get User Preferences",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/users/profile/preferences",
							"path": [
								"users",
								"profile",
								"preferences"
							]
						},
						"description": "## User Preferences\n\nThis endpoint retrieves the user's preferences."
					},
					"response": [
						{
							"name": "Get User Preferences Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users/profile/preferences",
									"path": [
										"users",
										"profile",
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"preferences\": {\n            \"app_locale\": \"ar\",\n            \"app_theme\": \"follow device\",\n            \"allow_email_notifications\": false,\n            \"allow_push_notifications\": true,\n            \"measurement_system\": \"imperial\",\n            \"data_export_format\": \"JSON\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"User preferences retrieved successfully\"\n}"
						},
						{
							"name": "Get User Preferences Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/users/profile/preferences",
									"path": [
										"users",
										"profile",
										"preferences"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"User preferences not found\"\n}"
						}
					]
				},
				{
					"name": "Update User Preferences",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"app_locale\": \"ar\",\n    \"app_theme\": \"follow device\",\n    \"allow_email_notifications\": false,\n    \"allow_push_notifications\": true,\n    \"measurement_system\": \"imperial\",\n    \"data_export_format\": \"JSON\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/users/profile/preferences",
							"path": [
								"users",
								"profile",
								"preferences"
							]
						},
						"description": "## User Preferences\n\nThis endpoint updates the user's preferences.\n\n### Request Body\n\n- `app_locale` (string): The preferred app locale (e.g., en, ar).\n- `app_theme` (string): The preferred app theme (e.g., light, dark, follow device).\n- `allow_email_notifications` (boolean): Allows email notifications if true.\n- `allow_push_notifications` (boolean): Allows push notifications if true.\n- `measurement_system` (string): The preferred measurement system (e.g., metric, imperial).\n- `data_export_format` (string): The preferred data export format (e.g., CSV, JSON)."
					},
					"response": [
						{
							"name": "Update User Preferences Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_locale\": \"ar\",\n    \"app_theme\": \"follow device\",\n    \"allow_email_notifications\": false,\n    \"allow_push_notifications\": true,\n    \"measurement_system\": \"imperial\",\n    \"data_export_format\": \"JSON\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/profile/preferences",
									"path": [
										"users",
										"profile",
										"preferences"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"preferences\": {\n            \"app_locale\": \"ar\",\n            \"app_theme\": \"follow device\",\n            \"allow_email_notifications\": false,\n            \"allow_push_notifications\": true,\n            \"measurement_system\": \"imperial\",\n            \"data_export_format\": \"JSON\"\n            }\n    },\n    \"errors\": null,\n    \"message\": \"User preferences updated successfully\"\n}"
						},
						{
							"name": "Update User Preferences Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"app_locale\": \"ar\",\n    \"app_theme\": \"follow device\",\n    \"allow_email_notifications\": false,\n    \"allow_push_notifications\": true,\n    \"measurement_system\": \"imperial\",\n    \"data_export_format\": \"JSON\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/users/profile/preferences",
									"path": [
										"users",
										"profile",
										"preferences"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"app_theme\": {\n            \"code\": \"invalid_value\",\n            \"message\": \"Invalid app theme value\"\n        }\n    },\n    \"message\": \"Failed to update user preferences\"\n}"
						}
					]
				}
			],
			"description": "The endpoints related to managing the users from the admin and the user profile/preferences in the app.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.kJwpLbOQOIZiWhEaW5JHH1vST6vP6rFBe5gA9_ELGJg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "farms",
			"item": [
				{
					"name": "[Admin] Get All Farms",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/farms?search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
							"path": [
								"farms"
							],
							"query": [
								{
									"key": "search",
									"value": "{{search}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit_per_page",
									"value": "{{limit_per_page}}"
								}
							]
						},
						"description": "## Farm Management\n\nThis endpoint retrieves all farms available in the system.\n\n### Query Parameters\n\n- `search` (string): Search query for filtering farms.\n- `page` (number): Page number for pagination.\n- `limit_per_page` (number): Limit of farms per page."
					},
					"response": [
						{
							"name": "Get All Farms Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms?search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
									"path": [
										"farms"
									],
									"query": [
										{
											"key": "search",
											"value": "{{search}}"
										},
										{
											"key": "page",
											"value": "{{page}}"
										},
										{
											"key": "limit_per_page",
											"value": "{{limit_per_page}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"items\": [\n            {\n                \"id\": \"1a2b3c4d\",\n                \"owner\": {\n                    \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n                    \"first_name\": \"test\",\n                    \"last_name\": \"test\",\n                    \"email\": \"test@gmail.com\",\n                    \"phone\": \"+96170987654\",\n                    \"country_code\": \"LB\",\n                    \"account_status\": \"active\",\n                    \"login_provider\": \"facebook\",\n                    \"role\": \"user\",\n                    \"profile_picture\": null,\n                    \"is_verified\": true,\n                    \"created_at\": \"2023-12-25T08:30:00Z\",\n                    \"updated_at\": \"2023-12-25T08:30:00Z\"\n                },\n                \"latitude\": 51.5074,\n                \"longitude\": -0.1278,\n                \"width\": 100,\n                \"height\": 150\n            },\n            {\n                \"id\": \"5e6f7g8h\",\n                \"owner\": {\n                    \"id\": \"a1b2c3d4\",\n                    \"first_name\": \"John\",\n                    \"last_name\": \"Doe\",\n                    \"email\": \"john.doe@example.com\",\n                    \"phone\": \"+1234567890\",\n                    \"country_code\": \"US\",\n                    \"account_status\": \"active\",\n                    \"login_provider\": \"email\",\n                    \"role\": \"user\",\n                    \"profile_picture\": null,\n                    \"is_verified\": false,\n                    \"created_at\": \"2023-11-20T09:45:00Z\",\n                    \"updated_at\": \"2023-11-20T09:45:00Z\"\n                },\n                \"latitude\": 40.7128,\n                \"longitude\": -74.006,\n                \"width\": 120,\n                \"height\": 200\n            }\n        ],\n        \"pagination\": {\n            \"total_pages\": 10,\n            \"limit_per_page\": 2,\n            \"current_page\": 1,\n            \"last_page\": 5\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Farms retrieved successfully\"\n}"
						},
						{
							"name": "Get All Farms Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms?search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
									"path": [
										"farms"
									],
									"query": [
										{
											"key": "search",
											"value": "{{search}}"
										},
										{
											"key": "page",
											"value": "{{page}}"
										},
										{
											"key": "limit_per_page",
											"value": "{{limit_per_page}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Farms not found\"\n}"
						}
					]
				},
				{
					"name": "Create Farm with Layout Points",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 51.5075,\n    \"longitude\":  -0.1277,\n    \"layout_points\": [\n        {\"latitude\": 51.5075, \"longitude\": -0.1277},\n        {\"latitude\": 51.5076, \"longitude\": -0.1276},\n        {\"latitude\": 51.5077, \"longitude\": -0.1275}\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/farms",
							"path": [
								"farms"
							]
						},
						"description": "## Create Farm with Layout Points\n\nThis endpoint creates a farm by providing the latitude, longitude, and an array of layout points to calculate the farm's height and width.\n\n### Request Body\n\n- `latitude` (uuid, required): Latitude of the farm.\n- `longitude` (uuid, required): Longitude of the farm.\n- `layout_points` (array, required): Array of layout points with latitude and longitude."
					},
					"response": [
						{
							"name": "Create Farm Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"latitude\": \"c16a4994-2fd7-40a8-a8e2-0df9aef9f45c\",\n    \"longitude\": \"ed043bd1-8f31-4d3d-b8e3-1e7d904341c7\",\n    \"layout_points\": [\n        {\"latitude\": 51.5075, \"longitude\": -0.1277},\n        {\"latitude\": 51.5076, \"longitude\": -0.1276},\n        {\"latitude\": 51.5077, \"longitude\": -0.1275}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farms",
									"path": [
										"farms"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm\": {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"latitude\": 51.5075,\n            \"longitude\":  -0.1277,\n            \"height\": 10,\n            \"width\": 20\n        },\n        \"farm_elements\": [\n            {\n                \"farm\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n                \"plant\": null,\n                \"object\": null,\n                \"level\": 1,\n                \"center_position_x\": 1,\n                \"center_position_y\": 2,\n                \"width\": 5,\n                \"height\": 5,\n                \"planted_at_date\": \"2024-01-01\",\n                \"count\": null,\n                \"actual_yield\": null,\n                \"spacing\": null,\n                \"parent\": null,\n                \"planting_period_start_date\": null,\n                \"planting_period_end_date\": null,\n                \"harvesting_period_start_date\": null,\n                \"harvesting_period_end_date\": null,\n                \"is_harvested\": false,\n                \"is_outside_farm_boundaries\": true\n            }\n        ]\n    },\n    \"errors\": null,\n    \"message\": \"Farm created successfully\"\n}"
						},
						{
							"name": "Create Farm Failure",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"latitude\": \"c16a4994-2fd7-40a8-a8e2-0df9aef9f45c\",\n    \"longitude\": \"ed043bd1-8f31-4d3d-b8e3-1e7d904341c7\",\n    \"layout_points\": [\n        {\"latitude\": 51.5075, \"longitude\": -0.1277},\n        {\"latitude\": 51.5076, \"longitude\": -0.1276},\n        {\"latitude\": 51.5077, \"longitude\": -0.1275}\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farms",
									"path": [
										"farms"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"latitude\": {\n            \"code\": \"invalid_latitude\",\n            \"message\": \"Latitude value is invalid\"\n        },\n        \"longitude\": {\n            \"code\": \"invalid_longitude\",\n            \"message\": \"Longitude value is invalid\"\n        },\n        \"layout_points\": {\n            \"code\": \"invalid_layout_points\",\n            \"message\": \"Invalid layout points provided\"\n        }\n    },\n    \"message\": \"Failed to create farm\"\n}"
						}
					]
				},
				{
					"name": "Update Farm Details",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 51.5074,\n    \"longitude\": -0.1278,\n    \"width\": 20,\n    \"height\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/farms/{{farmId}}",
							"path": [
								"farms",
								"{{farmId}}"
							]
						},
						"description": "## Update Farm Details\n\nThis endpoint updates farm details by providing the farm's ID, latitude, longitude, width, and height.\n\n### Request Body\n\n- `latitude` (number, required): Latitude of the farm.\n- `longitude` (number, required): Longitude of the farm.\n- `width` (number, required): Width of the farm.\n- `height` (number, required): Height of the farm."
					},
					"response": [
						{
							"name": "[Admin] Update Farm Details Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"latitude\": 51.5074,\n    \"longitude\": -0.1278,\n    \"width\": 20,\n    \"height\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farms/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"farms",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm\": {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"latitude\": 51.5074,\n            \"longitude\": -0.1278,\n            \"height\": 10,\n            \"width\": 20\n        },\n        \"farm_elements\": [\n            {\n                \"farm\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n                \"plant\": null,\n                \"object\": null,\n                \"level\": 1,\n                \"center_position_x\": 1,\n                \"center_position_y\": 2,\n                \"width\": 5,\n                \"height\": 5,\n                \"planted_at_date\": \"2024-01-01\",\n                \"count\": null,\n                \"actual_yield\": null,\n                \"spacing\": null,\n                \"parent\": null,\n                \"planting_period_start_date\": null,\n                \"planting_period_end_date\": null,\n                \"harvesting_period_start_date\": null,\n                \"harvesting_period_end_date\": null,\n                \"is_harvested\": false,\n                \"is_outside_farm_boundaries\": true\n            }\n        ]\n    },\n    \"errors\": null,\n    \"message\": \"Farm details updated successfully\"\n}"
						},
						{
							"name": "[Admin] Update Farm Details Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"latitude\": 51.5074,\n    \"longitude\": -0.1278,\n    \"width\": 20,\n    \"height\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farms/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"farms",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"latitude\": {\n            \"code\": \"invalid_latitude\",\n            \"message\": \"Latitude value is invalid\"\n        },\n        \"longitude\": {\n            \"code\": \"invalid_longitude\",\n            \"message\": \"Longitude value is invalid\"\n        }\n    },\n    \"message\": \"Failed to update farm details\"\n}"
						}
					]
				},
				{
					"name": "Delete Farm",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/farms/{{farmId}}",
							"path": [
								"farms",
								"{{farmId}}"
							]
						},
						"description": "## Delete Farm\n\nThis endpoint deletes a farm by providing its ID.\n"
					},
					"response": [
						{
							"name": "Delete Farm Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/farms/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"farms",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Farm deleted successfully\"\n}"
						},
						{
							"name": "Delete Farm Failure",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/farms/invalid_id",
									"path": [
										"farms",
										"invalid_id"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"farm\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm not found\"\n        }\n    },\n    \"message\": \"Failed to delete farm\"\n}"
						}
					]
				},
				{
					"name": "Get Farm Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/farms/{{farmId}}",
							"path": [
								"farms",
								"{{farmId}}"
							]
						},
						"description": "## Get Farm Details\n\nThis endpoint retrieves details of a farm by providing its ID.\n"
					},
					"response": [
						{
							"name": "Get Farm Details Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms/f47ac10b-58cc-4372-a567-0e02b2c3d479",
									"path": [
										"farms",
										"f47ac10b-58cc-4372-a567-0e02b2c3d479"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm\": {\n            \"id\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n            \"latitude\": 51.5074,\n            \"longitude\": -0.1278,\n            \"height\": 10,\n            \"width\": 20\n        },\n        \"farm_elements\": [\n            {\n                \"farm\": \"f47ac10b-58cc-4372-a567-0e02b2c3d479\",\n                \"plant\": null,\n                \"object\": null,\n                \"level\": 1,\n                \"center_position_x\": 1,\n                \"center_position_y\": 2,\n                \"width\": 5,\n                \"height\": 5,\n                \"planted_at_date\": \"2024-01-01\",\n                \"count\": null,\n                \"actual_yield\": null,\n                \"spacing\": null,\n                \"parent\": null,\n                \"planting_period_start_date\": null,\n                \"planting_period_end_date\": null,\n                \"harvesting_period_start_date\": null,\n                \"harvesting_period_end_date\": null,\n                \"is_harvested\": false,\n                \"is_outside_farm_boundaries\": true\n            }\n        ]\n    },\n    \"errors\": null,\n    \"message\": \"Farm details retrieved successfully\"\n}"
						},
						{
							"name": "Get Farm Details Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms/invalid_id",
									"path": [
										"farms",
										"invalid_id"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"farm\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve farm details\"\n}"
						}
					]
				},
				{
					"name": "Get Future Snapshot of Farm Elements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/farms/{{farmId}}/future-snapshot?future_date={{date}}",
							"path": [
								"farms",
								"{{farmId}}",
								"future-snapshot"
							],
							"query": [
								{
									"key": "future_date",
									"value": "{{date}}"
								}
							]
						},
						"description": "## Get Future Snapshot of Farm Elements\n\nThis endpoint retrieves a snapshot of expected farm elements in a future date by providing the farm ID and the future date.\n"
					},
					"response": [
						{
							"name": "Get Future Snapshot Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms/{{farmId}}/future-snapshot?future_date={{date}}",
									"path": [
										"farms",
										"{{farmId}}",
										"future-snapshot"
									],
									"query": [
										{
											"key": "future_date",
											"value": "{{date}}"
										}
									]
								},
								"description": "## Get Future Snapshot of Farm Elements\n\nThis endpoint retrieves a snapshot of expected farm elements in a future date by providing the farm ID and the future date.\n"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm\": \"{{farmId}}\",\n        \"future_date\": \"2024-06-01\",\n        \"farm_elements\": [\n            {\n                \"farm\": \"{{farmId}}\",\n                \"plant\": null,\n                \"object\": null,\n                \"level\": 1,\n                \"center_position_x\": 1,\n                \"center_position_y\": 2,\n                \"width\": 5,\n                \"height\": 5,\n                \"planted_at_date\": \"2024-06-01\",\n                \"count\": null,\n                \"actual_yield\": null,\n                \"spacing\": null,\n                \"parent\": null,\n                \"planting_period_start_date\": null,\n                \"planting_period_end_date\": null,\n                \"harvesting_period_start_date\": null,\n                \"harvesting_period_end_date\": null,\n                \"is_harvested\": false,\n                \"is_outside_farm_boundaries\": true\n            }\n        ]\n    },\n    \"errors\": null,\n    \"message\": \"Future snapshot of farm elements retrieved successfully\"\n}"
						},
						{
							"name": "Get Future Snapshot Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms/{{farmId}}/future-snapshot?future_date={{date}}",
									"path": [
										"farms",
										"{{farmId}}",
										"future-snapshot"
									],
									"query": [
										{
											"key": "future_date",
											"value": "{{date}}"
										}
									]
								},
								"description": "## Get Future Snapshot of Farm Elements\n\nThis endpoint retrieves a snapshot of expected farm elements in a future date by providing the farm ID and the future date.\n"
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"snapshot\": {\n            \"code\": \"not_found\",\n            \"message\": \"Future snapshot not available\"\n        }\n    },\n    \"message\": \"Failed to retrieve future snapshot\"\n}"
						}
					]
				},
				{
					"name": "Farm Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "farms/{{farmId}}/statistics",
							"host": [
								"farms"
							],
							"path": [
								"{{farmId}}",
								"statistics"
							]
						},
						"description": "Retrieve statistics for a specific farm."
					},
					"response": [
						{
							"name": "Farm Statistics Found",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"planting_area\": 540.23,\n        \"pathway_area\": 210.5,\n        \"total_yield\": 1200\n    },\n    \"errors\": null,\n    \"message\": \"Statistics retrieved successfully\"\n}"
						},
						{
							"name": "Farm Statistics Not Found",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Statistics not found\"\n    },\n    \"message\": \"Statistics not found\"\n}"
						}
					]
				},
				{
					"name": "Get All Grow Beds in the Farm with Planted Elements",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "farms/{{farmId}}/grow-beds",
							"host": [
								"farms"
							],
							"path": [
								"{{farmId}}",
								"grow-beds"
							]
						},
						"description": "Fetch all the grow beds in the farm along with the planted elements."
					},
					"response": [
						{
							"name": "Get Grow Beds Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "farms/{{farmId}}/grow-beds",
									"host": [
										"farms"
									],
									"path": [
										"{{farmId}}",
										"grow-beds"
									]
								},
								"description": "Fetch all the grow beds in the farm along with the planted elements."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"uuid\",\n      \"width\": 10,\n      \"height\": 8,\n      \"elements\": [\n        {\n          \"id\": \"uuid\",\n          \"plant\": {\n            \"id\": \"uuid\",\n            \"image\": \"path/to/image\",\n            \"name\": \"Plant Name\",\n            \"sub_name\": \"Sub Name\",\n            \"description\": \"Plant Description\",\n            \"type\": \"foreign_key_to_farm_element_types\"\n          },\n          \"planted_at_date\": \"2024-03-15\",\n          \"actual_yield\": 25,\n          \"is_harvested\": true\n        }\n      ]\n    }\n  ],\n  \"message\": \"Grow beds fetched successfully\"\n}"
						},
						{
							"name": "Get Grow Beds Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "farms/{{farmId}}/grow-beds",
									"host": [
										"farms"
									],
									"path": [
										"{{farmId}}",
										"grow-beds"
									]
								},
								"description": "Fetch all the grow beds in the farm along with the planted elements."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"data\": null,\n  \"errors\": {\n    \"message\": \"Unauthorized access\"\n  },\n  \"message\": \"Failed to fetch grow beds\"\n}"
						}
					]
				},
				{
					"name": "Get Farm Month Harvesting Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "farms/{{farmId}}/month-harvesting-info?month={{month}}",
							"host": [
								"farms"
							],
							"path": [
								"{{farmId}}",
								"month-harvesting-info"
							],
							"query": [
								{
									"key": "month",
									"value": "{{month}}"
								}
							]
						},
						"description": "Fetch the plants to be harvested in a specific month (ISO date string) from the farm."
					},
					"response": [
						{
							"name": "Farm Month Harvesting Info Success",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"plant\": \"Plant Name\",\n            \"quantity\": 100,\n            \"expected_yield\": 150,\n            \"actual_yield\": 120,\n            \"labour\": 5\n        }\n    ],\n    \"message\": \"Harvesting info retrieved successfully\"\n}"
						},
						{
							"name": "Farm Month Harvesting Info Failure",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Unauthorized access\"\n    },\n    \"message\": \"Failed to retrieve harvesting info\"\n}"
						}
					]
				}
			],
			"description": "The endpoints related to the farm itself.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "farm-elements",
			"item": [
				{
					"name": "Get Farm Elements of a Farm",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/farms/{{farmId}}/farm-elements",
							"path": [
								"farms",
								"{{farmId}}",
								"farm-elements"
							]
						},
						"description": "## Get Farm Elements of a Farm\n\nThis endpoint retrieves farm elements for a specific farm."
					},
					"response": [
						{
							"name": "Get Farm Elements Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms/{{farmId}}/farm-elements",
									"path": [
										"farms",
										"{{farmId}}",
										"farm-elements"
									]
								},
								"description": "## Get Farm Elements of a Farm\n\nThis endpoint retrieves farm elements for a specific farm."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm\": \"{{farmId}}\",\n        \"farm_elements\": [\n            {\n                \"farm\": \"{{farmId}}\",\n                \"plant\": {\n                    \"id\": \"123e4567-e89b-12d3-a456-426614174001\",\n                    \"image\": \"/path/to/image.jpg\",\n                    \"name\": \"Plant Name\",\n                    \"sub_name\": \"Sub Name\",\n                    \"description\": \"Description\",\n                    \"type\": \"123e4567-e89b-12d3-a456-426614174002\"\n                },\n                \"object\": null,\n                \"level\": 1,\n                \"center_position_x\": 1,\n                \"center_position_y\": 2,\n                \"width\": 5,\n                \"height\": 5,\n                \"planted_at_date\": \"2024-06-01\",\n                \"count\": null,\n                \"actual_yield\": null,\n                \"spacing\": null,\n                \"parent\": null,\n                \"planting_period_start_date\": null,\n                \"planting_period_end_date\": null,\n                \"harvesting_period_start_date\": null,\n                \"harvesting_period_end_date\": null,\n                \"is_harvested\": false,\n                \"is_outside_farm_boundaries\": false\n            }\n        ]\n    },\n    \"errors\": null,\n    \"message\": \"Farm elements retrieved successfully\"\n}"
						},
						{
							"name": "Get Farm Elements Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farms/{{farmId}}/farm-elements",
									"path": [
										"farms",
										"{{farmId}}",
										"farm-elements"
									]
								},
								"description": "## Get Farm Elements of a Farm\n\nThis endpoint retrieves farm elements for a specific farm."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"elements\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm elements not available for this farm\"\n        }\n    },\n    \"message\": \"Failed to retrieve farm elements\"\n}"
						}
					]
				},
				{
					"name": "Create Farm Element for a Farm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"plant\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"object\": null,\n    \"level\": 1,\n    \"center_position_x\": 1,\n    \"center_position_y\": 2,\n    \"width\": 5,\n    \"height\": 5,\n    \"planted_at_date\": \"2024-06-01\",\n    \"count\": null,\n    \"actual_yield\": null,\n    \"spacing\": null,\n    \"parent\": null,\n    \"planting_period_start_date\": null,\n    \"planting_period_end_date\": null,\n    \"harvesting_period_start_date\": null,\n    \"harvesting_period_end_date\": null,\n    \"is_harvested\": false,\n    \"is_outside_farm_boundaries\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/farms/{{farmId}}/farm-elements",
							"path": [
								"farms",
								"{{farmId}}",
								"farm-elements"
							]
						},
						"description": "## Create Farm Element for a Farm\n\nThis endpoint creates a new farm element for a specified farm."
					},
					"response": [
						{
							"name": "Create Farm Element Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"plant\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"object\": null,\n    \"level\": 1,\n    \"center_position_x\": 1,\n    \"center_position_y\": 2,\n    \"width\": 5,\n    \"height\": 5,\n    \"planted_at_date\": \"2024-06-01\",\n    \"count\": null,\n    \"actual_yield\": null,\n    \"spacing\": null,\n    \"parent\": null,\n    \"planting_period_start_date\": null,\n    \"planting_period_end_date\": null,\n    \"harvesting_period_start_date\": null,\n    \"harvesting_period_end_date\": null,\n    \"is_harvested\": false,\n    \"is_outside_farm_boundaries\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farms/{{farmId}}/farm-elements",
									"path": [
										"farms",
										"{{farmId}}",
										"farm-elements"
									]
								},
								"description": "## Create Farm Element for a Farm\n\nThis endpoint creates a new farm element for a specified farm."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm\": \"{{farmId}}\",\n        \"farm_element_id\": \"123e4567-e89b-12d3-a456-426614174003\"\n    },\n    \"errors\": null,\n    \"message\": \"Farm element created successfully\"\n}"
						},
						{
							"name": "Create Farm Element Failure",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"plant\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"object\": null,\n    \"level\": 1,\n    \"center_position_x\": 1,\n    \"center_position_y\": 2,\n    \"width\": 5,\n    \"height\": 5,\n    \"planted_at_date\": \"2024-06-01\",\n    \"count\": null,\n    \"actual_yield\": null,\n    \"spacing\": null,\n    \"parent\": null,\n    \"planting_period_start_date\": null,\n    \"planting_period_end_date\": null,\n    \"harvesting_period_start_date\": null,\n    \"harvesting_period_end_date\": null,\n    \"is_harvested\": false,\n    \"is_outside_farm_boundaries\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farms/{{farmId}}/farm-elements",
									"path": [
										"farms",
										"{{farmId}}",
										"farm-elements"
									]
								},
								"description": "## Create Farm Element for a Farm\n\nThis endpoint creates a new farm element for a specified farm."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided for creating farm element\"\n        }\n    },\n    \"message\": \"Failed to create farm element\"\n}"
						}
					]
				},
				{
					"name": "Update Farm Element",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"plant\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"object\": null,\n    \"level\": 2,\n    \"center_position_x\": 3,\n    \"center_position_y\": 4,\n    \"width\": 6,\n    \"height\": 6,\n    \"planted_at_date\": \"2024-06-02\",\n    \"count\": 10,\n    \"actual_yield\": 25.5,\n    \"spacing\": 12,\n    \"parent\": null,\n    \"planting_period_start_date\": null,\n    \"planting_period_end_date\": null,\n    \"harvesting_period_start_date\": null,\n    \"harvesting_period_end_date\": null,\n    \"is_harvested\": true,\n    \"is_outside_farm_boundaries\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/farm-elements/{{farmElementId}}",
							"path": [
								"farm-elements",
								"{{farmElementId}}"
							]
						},
						"description": "## Update Farm Element\n\nThis endpoint updates an existing farm element."
					},
					"response": [
						{
							"name": "Update Farm Element Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"plant\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"object\": null,\n    \"level\": 2,\n    \"center_position_x\": 3,\n    \"center_position_y\": 4,\n    \"width\": 6,\n    \"height\": 6,\n    \"planted_at_date\": \"2024-06-02\",\n    \"count\": 10,\n    \"actual_yield\": 25.5,\n    \"spacing\": 12,\n    \"parent\": null,\n    \"planting_period_start_date\": null,\n    \"planting_period_end_date\": null,\n    \"harvesting_period_start_date\": null,\n    \"harvesting_period_end_date\": null,\n    \"is_harvested\": true,\n    \"is_outside_farm_boundaries\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farm-elements/{{farmElementId}}",
									"path": [
										"farm-elements",
										"{{farmElementId}}"
									]
								},
								"description": "## Update Farm Element\n\nThis endpoint updates an existing farm element."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm_element_id\": \"{{farmElementId}}\"\n    },\n    \"errors\": null,\n    \"message\": \"Farm element updated successfully\"\n}"
						},
						{
							"name": "Update Farm Element Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"plant\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"object\": null,\n    \"level\": 2,\n    \"center_position_x\": 3,\n    \"center_position_y\": 4,\n    \"width\": 6,\n    \"height\": 6,\n    \"planted_at_date\": \"2024-06-02\",\n    \"count\": 10,\n    \"actual_yield\": 25.5,\n    \"spacing\": 12,\n    \"parent\": null,\n    \"planting_period_start_date\": null,\n    \"planting_period_end_date\": null,\n    \"harvesting_period_start_date\": null,\n    \"harvesting_period_end_date\": null,\n    \"is_harvested\": true,\n    \"is_outside_farm_boundaries\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farm-elements/{{farmElementId}}",
									"path": [
										"farm-elements",
										"{{farmElementId}}"
									]
								},
								"description": "## Update Farm Element\n\nThis endpoint updates an existing farm element."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm element not found\"\n        }\n    },\n    \"message\": \"Failed to update farm element\"\n}"
						}
					]
				},
				{
					"name": "Delete Farm Element",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/farm-elements/{{farmElementId}}",
							"path": [
								"farm-elements",
								"{{farmElementId}}"
							]
						},
						"description": "## Delete Farm Element\n\nThis endpoint deletes an existing farm element."
					},
					"response": [
						{
							"name": "Delete Farm Element Success",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Farm element deleted successfully\"\n}"
						},
						{
							"name": "Delete Farm Element Failure",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm element not found\"\n        }\n    },\n    \"message\": \"Failed to delete farm element\"\n}"
						}
					]
				}
			],
			"description": "The endpoints related to the farm elements (plants and objects), their layout and rules.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "farm-element-types",
			"item": [
				{
					"name": "Get Farm Element Types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/farm-element-types?target_element={{targetElement}}",
							"path": [
								"farm-element-types"
							],
							"query": [
								{
									"key": "target_element",
									"value": "{{targetElement}}"
								}
							]
						},
						"description": "## Get Farm Element Types\n\nThis endpoint retrieves farm element types based on the target element (plant or object)."
					},
					"response": [
						{
							"name": "Get Farm Element Types Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farm-element-types?target_element={{targetElement}}",
									"path": [
										"farm-element-types"
									],
									"query": [
										{
											"key": "target_element",
											"value": "{{targetElement}}"
										}
									]
								},
								"description": "## Get Farm Element Types\n\nThis endpoint retrieves farm element types based on the target element (plant or object)."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"123e4567-e89b-12d3-a456-426614174002\",\n            \"target_element\": \"plant\",\n            \"name\": \"Corn\",\n            \"description\": \"Tall annual cereal grass\",\n            \"image\": \"path/to/corn_image.png\"\n        },\n        {\n            \"id\": \"123e4567-e89b-12d3-a456-426614174003\",\n            \"target_element\": \"plant\",\n            \"name\": \"Tomato\",\n            \"description\": \"Red edible berry\",\n            \"image\": \"path/to/tomato_image.png\"\n        }\n    ],\n    \"errors\": null,\n    \"message\": \"Farm element types retrieved successfully\"\n}"
						},
						{
							"name": "Get Farm Element Types Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farm-element-types?target_element={{targetElement}}",
									"path": [
										"farm-element-types"
									],
									"query": [
										{
											"key": "target_element",
											"value": "{{targetElement}}"
										}
									]
								},
								"description": "## Get Farm Element Types\n\nThis endpoint retrieves farm element types based on the target element (plant or object)."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element\": {\n            \"code\": \"invalid_target\",\n            \"message\": \"Invalid target element provided\"\n        }\n    },\n    \"message\": \"Failed to retrieve farm element types\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Create Farm Element Type",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"target_element\": \"plant\",\n    \"name\": \"Potato\",\n    \"description\": \"Starchy tuberous crop\",\n    \"image\": \"path/to/potato_image.png\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/farm-element-types",
							"path": [
								"farm-element-types"
							]
						},
						"description": "## [Admin] Create Farm Element Type\n\nThis endpoint allows an admin to create a new farm element type."
					},
					"response": [
						{
							"name": "[Admin] Create Farm Element Type Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"target_element\": \"plant\",\n    \"name\": \"Potato\",\n    \"description\": \"Starchy tuberous crop\",\n    \"image\": \"path/to/potato_image.png\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farm-element-types",
									"path": [
										"farm-element-types"
									]
								},
								"description": "## [Admin] Create Farm Element Type\n\nThis endpoint allows an admin to create a new farm element type."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm_element_type_id\": \"123e4567-e89b-12d3-a456-426614174004\"\n    },\n    \"errors\": null,\n    \"message\": \"Farm element type created successfully\"\n}"
						},
						{
							"name": "[Admin] Create Farm Element Type Failure",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"target_element\": \"plant\",\n    \"name\": \"Potato\",\n    \"description\": \"Starchy tuberous crop\",\n    \"image\": \"path/to/potato_image.png\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farm-element-types",
									"path": [
										"farm-element-types"
									]
								},
								"description": "## [Admin] Create Farm Element Type\n\nThis endpoint allows an admin to create a new farm element type."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element_type\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided for creating farm element type\"\n        }\n    },\n    \"message\": \"Failed to create farm element type\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Update Farm Element Type",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"description\": \"Updated description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/farm-element-types/{{farmElementTypeId}}",
							"path": [
								"farm-element-types",
								"{{farmElementTypeId}}"
							]
						},
						"description": "## [Admin] Update Farm Element Type\n\nThis endpoint allows an admin to update an existing farm element type."
					},
					"response": [
						{
							"name": "[Admin] Update Farm Element Type Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Updated Name\",\n    \"description\": \"Updated description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farm-element-types/{{farmElementTypeId}}",
									"path": [
										"farm-element-types",
										"{{farmElementTypeId}}"
									]
								},
								"description": "## [Admin] Update Farm Element Type\n\nThis endpoint allows an admin to update an existing farm element type."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm_element_type_id\": \"{{farmElementTypeId}}\"\n    },\n    \"errors\": null,\n    \"message\": \"Farm element type updated successfully\"\n}"
						},
						{
							"name": "[Admin] Update Farm Element Type Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Updated Name\",\n    \"description\": \"Updated description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/farm-element-types/{{farmElementTypeId}}",
									"path": [
										"farm-element-types",
										"{{farmElementTypeId}}"
									]
								},
								"description": "## [Admin] Update Farm Element Type\n\nThis endpoint allows an admin to update an existing farm element type."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element_type\": {\n            \"code\": \"update_failed\",\n            \"message\": \"Failed to update farm element type\"\n        }\n    },\n    \"message\": \"Failed to update farm element type\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete Farm Element Type",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/farm-element-types/{{farmElementTypeId}}",
							"path": [
								"farm-element-types",
								"{{farmElementTypeId}}"
							]
						},
						"description": "## [Admin] Delete Farm Element Type\n\nThis endpoint allows an admin to delete a specific farm element type."
					},
					"response": [
						{
							"name": "[Admin] Delete Farm Element Type Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/farm-element-types/{{farmElementTypeId}}",
									"path": [
										"farm-element-types",
										"{{farmElementTypeId}}"
									]
								},
								"description": "## [Admin] Delete Farm Element Type\n\nThis endpoint allows an admin to delete a specific farm element type."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Farm element type deleted successfully\"\n}"
						},
						{
							"name": "[Admin] Delete Farm Element Type Failure",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/farm-element-types/{{farmElementTypeId}}",
									"path": [
										"farm-element-types",
										"{{farmElementTypeId}}"
									]
								},
								"description": "## [Admin] Delete Farm Element Type\n\nThis endpoint allows an admin to delete a specific farm element type."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element_type\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm element type not found\"\n        }\n    },\n    \"message\": \"Failed to delete farm element type\"\n}"
						}
					]
				},
				{
					"name": "Get Farm Element Type Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/farm-element-types/{{farmElementTypeId}}",
							"path": [
								"farm-element-types",
								"{{farmElementTypeId}}"
							]
						},
						"description": "Retrieve details of a specific farm element type."
					},
					"response": [
						{
							"name": "Farm Element Type Details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farm-element-types/{{farmElementTypeId}}",
									"path": [
										"farm-element-types",
										"{{farmElementTypeId}}"
									]
								},
								"description": "Retrieve details of a specific farm element type."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"farm_element_type\": {\n            \"id\": \"{{farmElementTypeId}}\",\n            \"target_element\": \"plant\",\n            \"name\": \"Potato\",\n            \"description\": \"Starchy tuberous crop\",\n            \"image\": \"path/to/potato_image.png\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Farm element type details retrieved successfully\"\n}"
						},
						{
							"name": "Farm Element Type Details Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/farm-element-types/{{farmElementTypeId}}",
									"path": [
										"farm-element-types",
										"{{farmElementTypeId}}"
									]
								},
								"description": "Retrieve details of a specific farm element type."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"element_type\": {\n            \"code\": \"not_found\",\n            \"message\": \"Farm element type not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve farm element type details\"\n}"
						}
					]
				}
			],
			"description": "The endpoints related to the farm element types and rules associated with each type",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "plants",
			"item": [
				{
					"name": "Get Plants by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/plants?type={{plantType}}&search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
							"path": [
								"plants"
							],
							"query": [
								{
									"key": "type",
									"value": "{{plantType}}"
								},
								{
									"key": "search",
									"value": "{{search}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit_per_page",
									"value": "{{limit_per_page}}"
								}
							]
						},
						"description": "Retrieve plants by type with pagination and search functionality."
					},
					"response": [
						{
							"name": "Plants by Type",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants?type={{plantType}}&search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
									"path": [
										"plants"
									],
									"query": [
										{
											"key": "type",
											"value": "{{plantType}}"
										},
										{
											"key": "search",
											"value": "{{search}}"
										},
										{
											"key": "page",
											"value": "{{page}}"
										},
										{
											"key": "limit_per_page",
											"value": "{{limit_per_page}}"
										}
									]
								},
								"description": "Retrieve plants by type with pagination and search functionality."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"plants\": [\n            {\n                \"id\": \"1\",\n                \"image\": \"path/to/plant_image.png\",\n                \"name\": \"Plant A\",\n                \"sub_name\": \"Sub name\",\n                \"description\": \"Description of Plant A\",\n                \"type\": \"Type A\"\n            },\n            {\n                \"id\": \"2\",\n                \"image\": \"path/to/plant_image_2.png\",\n                \"name\": \"Plant B\",\n                \"sub_name\": \"Sub name B\",\n                \"description\": \"Description of Plant B\",\n                \"type\": \"Type B\"\n            }\n        ],\n        \"pagination\": {\n            \"total_pages\": 5,\n            \"limit_per_page\": 10,\n            \"current_page\": 1,\n            \"last_page\": 5\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Plants by type retrieved successfully\"\n}"
						},
						{
							"name": "Plants by Type Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants?type={{plantType}}&search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
									"path": [
										"plants"
									],
									"query": [
										{
											"key": "type",
											"value": "{{plantType}}"
										},
										{
											"key": "search",
											"value": "{{search}}"
										},
										{
											"key": "page",
											"value": "{{page}}"
										},
										{
											"key": "limit_per_page",
											"value": "{{limit_per_page}}"
										}
									]
								},
								"description": "Retrieve plants by type with pagination and search functionality."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plants\": {\n            \"code\": \"not_found\",\n            \"message\": \"No plants found for the specified type\"\n        }\n    },\n    \"message\": \"No plants found for the specified type\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Create Plant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"image\": \"path/to/plant_image.png\",\n    \"name\": \"Plant Name\",\n    \"sub_name\": \"Sub Name\",\n    \"description\": \"Description of the plant\",\n    \"type\": \"Plant Type ID\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/plants",
							"path": [
								"plants"
							]
						},
						"description": "## [Admin] Create Plant\n\nCreate a new plant entry."
					},
					"response": [
						{
							"name": "[Admin] Create Plant Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"path/to/plant_image.png\",\n    \"name\": \"Plant Name\",\n    \"sub_name\": \"Sub Name\",\n    \"description\": \"Description of the plant\",\n    \"type\": \"Plant Type ID\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants",
									"path": [
										"plants"
									]
								},
								"description": "## [Admin] Create Plant\n\nCreate a new plant entry."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"plant\": {\n            \"id\": \"generated_uuid\",\n            \"image\": \"path/to/plant_image.png\",\n            \"name\": \"Plant Name\",\n            \"sub_name\": \"Sub Name\",\n            \"description\": \"Description of the plant\",\n            \"type\": \"Plant Type ID\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Plant created successfully\"\n}"
						},
						{
							"name": "[Admin] Create Plant Failure",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"path/to/plant_image.png\",\n    \"name\": \"Plant Name\",\n    \"sub_name\": \"Sub Name\",\n    \"description\": \"Description of the plant\",\n    \"type\": \"Plant Type ID\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants",
									"path": [
										"plants"
									]
								},
								"description": "## [Admin] Create Plant\n\nCreate a new plant entry."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"validation\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid plant data provided\"\n        }\n    },\n    \"message\": \"Failed to create plant\"\n}"
						}
					]
				},
				{
					"name": "Get Plant Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/plants/{{plantId}}",
							"path": [
								"plants",
								"{{plantId}}"
							]
						},
						"description": "Retrieve details of a specific plant."
					},
					"response": [
						{
							"name": "Plant Details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}",
									"path": [
										"plants",
										"{{plantId}}"
									]
								},
								"description": "Retrieve details of a specific plant."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"plant\": {\n            \"id\": \"{{plantId}}\",\n            \"image\": \"path/to/plant_image.png\",\n            \"name\": \"Plant Name\",\n            \"sub_name\": \"Sub Name\",\n            \"description\": \"Description of the plant\",\n            \"type\": \"Plant Type ID\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Plant details retrieved successfully\"\n}"
						},
						{
							"name": "Plant Details Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}",
									"path": [
										"plants",
										"{{plantId}}"
									]
								},
								"description": "Retrieve details of a specific plant."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plant\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve plant details\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete Plant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/plants/{{plantId}}",
							"path": [
								"plants",
								"{{plantId}}"
							]
						},
						"description": "## [Admin] Delete Plant\n\nDelete a specific plant entry."
					},
					"response": [
						{
							"name": "[Admin] Delete Plant Success",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Plant deleted successfully\"\n}"
						},
						{
							"name": "[Admin] Delete Plant Failure",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plant\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant not found\"\n        }\n    },\n    \"message\": \"Failed to delete plant\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Update Plant",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"image\": \"path/to/updated_plant_image.png\",\n    \"name\": \"Updated Plant Name\",\n    \"sub_name\": \"Updated Sub Name\",\n    \"description\": \"Updated description of the plant\",\n    \"type\": \"Updated Plant Type ID\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/plants/{{plantId}}",
							"path": [
								"plants",
								"{{plantId}}"
							]
						},
						"description": "## [Admin] Update Plant\n\nUpdate details of a specific plant."
					},
					"response": [
						{
							"name": "[Admin] Update Plant Success",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"path/to/updated_plant_image.png\",\n    \"name\": \"Updated Plant Name\",\n    \"sub_name\": \"Updated Sub Name\",\n    \"description\": \"Updated description of the plant\",\n    \"type\": \"Updated Plant Type ID\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}",
									"path": [
										"plants",
										"{{plantId}}"
									]
								},
								"description": "## [Admin] Update Plant\n\nUpdate details of a specific plant."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"plant\": {\n            \"id\": \"{{plantId}}\",\n            \"image\": \"path/to/updated_plant_image.png\",\n            \"name\": \"Updated Plant Name\",\n            \"sub_name\": \"Updated Sub Name\",\n            \"description\": \"Updated description of the plant\",\n            \"type\": \"Updated Plant Type ID\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Plant updated successfully\"\n}"
						},
						{
							"name": "[Admin] Update Plant Failure",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"path/to/updated_plant_image.png\",\n    \"name\": \"Updated Plant Name\",\n    \"sub_name\": \"Updated Sub Name\",\n    \"description\": \"Updated description of the plant\",\n    \"type\": \"Updated Plant Type ID\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}",
									"path": [
										"plants",
										"{{plantId}}"
									]
								},
								"description": "## [Admin] Update Plant\n\nUpdate details of a specific plant."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plant\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant not found\"\n        }\n    },\n    \"message\": \"Failed to update plant\"\n}"
						}
					]
				},
				{
					"name": "Recommended Planting and Harvesting Periods",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/plants/{{plantId}}/recommended-periods",
							"path": [
								"plants",
								"{{plantId}}",
								"recommended-periods"
							]
						},
						"description": "Get the recommended planting and harvesting periods for a specific plant."
					},
					"response": [
						{
							"name": "Recommended Periods Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}/recommended-periods",
									"path": [
										"plants",
										"{{plantId}}",
										"recommended-periods"
									]
								},
								"description": "Get the recommended planting and harvesting periods for a specific plant."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"planting_period\": {\n            \"start_month\": \"Month\",\n            \"end_month\": \"Month\"\n        },\n        \"harvesting_period\": {\n            \"start_month\": \"Month\",\n            \"end_month\": \"Month\"\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Recommended planting and harvesting periods retrieved successfully\"\n}"
						},
						{
							"name": "Recommended Periods Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}/recommended-periods",
									"path": [
										"plants",
										"{{plantId}}",
										"recommended-periods"
									]
								},
								"description": "Get the recommended planting and harvesting periods for a specific plant."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plant\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve recommended periods\"\n}"
						}
					]
				},
				{
					"name": "Expected Yield Calculation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"planting_period\": {\n        \"start_month\": \"Month\",\n        \"end_month\": \"Month\"\n    },\n    \"harvesting_period\": {\n        \"start_month\": \"Month\",\n        \"end_month\": \"Month\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/plants/{{plantId}}/expected-yield",
							"path": [
								"plants",
								"{{plantId}}",
								"expected-yield"
							]
						},
						"description": "Calculate the expected yield in kg based on the recommended planting and harvesting period."
					},
					"response": [
						{
							"name": "Expected Yield Calculation Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"planting_period\": {\n        \"start_month\": \"Month\",\n        \"end_month\": \"Month\"\n    },\n    \"harvesting_period\": {\n        \"start_month\": \"Month\",\n        \"end_month\": \"Month\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}/expected-yield",
									"path": [
										"plants",
										"{{plantId}}",
										"expected-yield"
									]
								},
								"description": "Calculate the expected yield in kg based on the recommended planting and harvesting period."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"expected_yield\": 500,\n        \"unit\": \"kg\"\n    },\n    \"errors\": null,\n    \"message\": \"Expected yield calculated successfully\"\n}"
						},
						{
							"name": "Expected Yield Calculation Failure",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"planting_period\": {\n        \"start_month\": \"Month\",\n        \"end_month\": \"Month\"\n    },\n    \"harvesting_period\": {\n        \"start_month\": \"Month\",\n        \"end_month\": \"Month\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}/expected-yield",
									"path": [
										"plants",
										"{{plantId}}",
										"expected-yield"
									]
								},
								"description": "Calculate the expected yield in kg based on the recommended planting and harvesting period."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plant\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant not found\"\n        }\n    },\n    \"message\": \"Failed to calculate expected yield\"\n}"
						}
					]
				},
				{
					"name": "Plant Properties Retrieval",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/plants/{{plantId}}/properties",
							"path": [
								"plants",
								"{{plantId}}",
								"properties"
							]
						},
						"description": "Retrieve properties associated with a specific plant."
					},
					"response": [
						{
							"name": "Plant Properties Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}/properties",
									"path": [
										"plants",
										"{{plantId}}",
										"properties"
									]
								},
								"description": "Retrieve properties associated with a specific plant."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"life_span_sowing_week\": 10,\n        \"life_span_transplanting_week\": 8,\n        \"life_span_harvesting_week\": 16,\n        \"life_span_removal_week\": 2,\n        \"temperature_survival\": 25,\n        \"temperature_growth\": 30,\n        \"temperature_production\": 28,\n        \"direct_sunlight\": 6,\n        \"seed_weight\": 2,\n        \"ph\": 6.5,\n        \"root_depth\": 15,\n        \"root_width\": 8,\n        \"feeding_type\": \"organic\",\n        \"nutrients\": {\"nitrogen\": 12, \"phosphorus\": 8, \"potassium\": 10},\n        \"plant_shape\": \"Bushy\",\n        \"water_liters\": 2.5,\n        \"water_drip_minutes\": 10,\n        \"water_frequency\": 2,\n        \"labor_sow\": 4,\n        \"labor_water\": 3,\n        \"labor_transplant\": 6,\n        \"labor_weed\": 5,\n        \"labor_prune\": 2,\n        \"labor_harvest\": 8,\n        \"labor_remove\": 1,\n        \"labor_prepare_bed\": 4,\n        \"labor_add_activity\": 3\n    },\n    \"errors\": null,\n    \"message\": \"Plant properties retrieved successfully\"\n}"
						},
						{
							"name": "Plant Properties Failure",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}/properties",
									"path": [
										"plants",
										"{{plantId}}",
										"properties"
									]
								},
								"description": "Retrieve properties associated with a specific plant."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"plant\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant properties not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve plant properties\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Plant Properties Update",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"life_span_sowing_week\": 10,\n    \"life_span_transplanting_week\": 8,\n    \"life_span_harvesting_week\": 16,\n    \"life_span_removal_week\": 2,\n    \"temperature_survival\": 25,\n    \"temperature_growth\": 30,\n    \"temperature_production\": 28,\n    \"direct_sunlight\": 6,\n    \"seed_weight\": 2,\n    \"ph\": 6.5,\n    \"root_depth\": 15,\n    \"root_width\": 8,\n    \"feeding_type\": \"organic\",\n    \"nutrients\": {\"nitrogen\": 12, \"phosphorus\": 8, \"potassium\": 10},\n    \"plant_shape\": \"Bushy\",\n    \"water_liters\": 2.5,\n    \"water_drip_minutes\": 10,\n    \"water_frequency\": 2,\n    \"labor_sow\": 4,\n    \"labor_water\": 3,\n    \"labor_transplant\": 6,\n    \"labor_weed\": 5,\n    \"labor_prune\": 2,\n    \"labor_harvest\": 8,\n    \"labor_remove\": 1,\n    \"labor_prepare_bed\": 4,\n    \"labor_add_activity\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/plants/{{plantId}}/properties",
							"path": [
								"plants",
								"{{plantId}}",
								"properties"
							]
						},
						"description": "Update properties for a specific plant."
					},
					"response": [
						{
							"name": "Plant Properties Update Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"life_span_sowing_week\": 10,\n    \"life_span_transplanting_week\": 8,\n    \"life_span_harvesting_week\": 16,\n    \"life_span_removal_week\": 2,\n    \"temperature_survival\": 25,\n    \"temperature_growth\": 30,\n    \"temperature_production\": 28,\n    \"direct_sunlight\": 6,\n    \"seed_weight\": 2,\n    \"ph\": 6.5,\n    \"root_depth\": 15,\n    \"root_width\": 8,\n    \"feeding_type\": \"organic\",\n    \"nutrients\": {\"nitrogen\": 12, \"phosphorus\": 8, \"potassium\": 10},\n    \"plant_shape\": \"Bushy\",\n    \"water_liters\": 2.5,\n    \"water_drip_minutes\": 10,\n    \"water_frequency\": 2,\n    \"labor_sow\": 4,\n    \"labor_water\": 3,\n    \"labor_transplant\": 6,\n    \"labor_weed\": 5,\n    \"labor_prune\": 2,\n    \"labor_harvest\": 8,\n    \"labor_remove\": 1,\n    \"labor_prepare_bed\": 4,\n    \"labor_add_activity\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}/properties",
									"path": [
										"plants",
										"{{plantId}}",
										"properties"
									]
								},
								"description": "Update properties for a specific plant."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Plant properties updated successfully\"\n}"
						},
						{
							"name": "Plant Properties Update Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"life_span_sowing_week\": 10,\n    \"life_span_transplanting_week\": 8,\n    \"life_span_harvesting_week\": 16,\n    \"life_span_removal_week\": 2,\n    \"temperature_survival\": 25,\n    \"temperature_growth\": 30,\n    \"temperature_production\": 28,\n    \"direct_sunlight\": 6,\n    \"seed_weight\": 2,\n    \"ph\": 6.5,\n    \"root_depth\": 15,\n    \"root_width\": 8,\n    \"feeding_type\": \"organic\",\n    \"nutrients\": {\"nitrogen\": 12, \"phosphorus\": 8, \"potassium\": 10},\n    \"plant_shape\": \"Bushy\",\n    \"water_liters\": 2.5,\n    \"water_drip_minutes\": 10,\n    \"water_frequency\": 2,\n    \"labor_sow\": 4,\n    \"labor_water\": 3,\n    \"labor_transplant\": 6,\n    \"labor_weed\": 5,\n    \"labor_prune\": 2,\n    \"labor_harvest\": 8,\n    \"labor_remove\": 1,\n    \"labor_prepare_bed\": 4,\n    \"labor_add_activity\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}/properties",
									"path": [
										"plants",
										"{{plantId}}",
										"properties"
									]
								},
								"description": "Update properties for a specific plant."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"validation\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided\"\n        }\n    },\n    \"message\": \"Failed to update plant properties\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Plant Property Update",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"life_span_sowing_week\": 8,\n    \"life_span_transplanting_week\": 6,\n    \"life_span_harvesting_week\": 14,\n    \"life_span_removal_week\": 1,\n    \"temperature_survival\": 22,\n    \"temperature_growth\": 28,\n    \"temperature_production\": 26,\n    \"direct_sunlight\": 7,\n    \"seed_weight\": 2.5,\n    \"ph\": 6.8,\n    \"root_depth\": 14,\n    \"root_width\": 7,\n    \"feeding_type\": \"mineral\",\n    \"nutrients\": {\"nitrogen\": 10, \"phosphorus\": 6, \"potassium\": 8},\n    \"plant_shape\": \"Upright\",\n    \"water_liters\": 3,\n    \"water_drip_minutes\": 12,\n    \"water_frequency\": 3,\n    \"labor_sow\": 5,\n    \"labor_water\": 4,\n    \"labor_transplant\": 7,\n    \"labor_weed\": 6,\n    \"labor_prune\": 3,\n    \"labor_harvest\": 10,\n    \"labor_remove\": 2,\n    \"labor_prepare_bed\": 5,\n    \"labor_add_activity\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/plant-properties/{{plantPropertyId}}",
							"path": [
								"plant-properties",
								"{{plantPropertyId}}"
							]
						},
						"description": "Update properties for a specific plant property."
					},
					"response": [
						{
							"name": "Plant Property Update Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"life_span_sowing_week\": 8,\n    \"life_span_transplanting_week\": 6,\n    \"life_span_harvesting_week\": 14,\n    \"life_span_removal_week\": 1,\n    \"temperature_survival\": 22,\n    \"temperature_growth\": 28,\n    \"temperature_production\": 26,\n    \"direct_sunlight\": 7,\n    \"seed_weight\": 2.5,\n    \"ph\": 6.8,\n    \"root_depth\": 14,\n    \"root_width\": 7,\n    \"feeding_type\": \"mineral\",\n    \"nutrients\": {\"nitrogen\": 10, \"phosphorus\": 6, \"potassium\": 8},\n    \"plant_shape\": \"Upright\",\n    \"water_liters\": 3,\n    \"water_drip_minutes\": 12,\n    \"water_frequency\": 3,\n    \"labor_sow\": 5,\n    \"labor_water\": 4,\n    \"labor_transplant\": 7,\n    \"labor_weed\": 6,\n    \"labor_prune\": 3,\n    \"labor_harvest\": 10,\n    \"labor_remove\": 2,\n    \"labor_prepare_bed\": 5,\n    \"labor_add_activity\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plant-properties/{{plantPropertyId}}",
									"path": [
										"plant-properties",
										"{{plantPropertyId}}"
									]
								},
								"description": "Update properties for a specific plant property."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Plant property updated successfully\"\n}"
						},
						{
							"name": "Plant Property Update Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"life_span_sowing_week\": 8,\n    \"life_span_transplanting_week\": 6,\n    \"life_span_harvesting_week\": 14,\n    \"life_span_removal_week\": 1,\n    \"temperature_survival\": 22,\n    \"temperature_growth\": 28,\n    \"temperature_production\": 26,\n    \"direct_sunlight\": 7,\n    \"seed_weight\": 2.5,\n    \"ph\": 6.8,\n    \"root_depth\": 14,\n    \"root_width\": 7,\n    \"feeding_type\": \"mineral\",\n    \"nutrients\": {\"nitrogen\": 10, \"phosphorus\": 6, \"potassium\": 8},\n    \"plant_shape\": \"Upright\",\n    \"water_liters\": 3,\n    \"water_drip_minutes\": 12,\n    \"water_frequency\": 3,\n    \"labor_sow\": 5,\n    \"labor_water\": 4,\n    \"labor_transplant\": 7,\n    \"labor_weed\": 6,\n    \"labor_prune\": 3,\n    \"labor_harvest\": 10,\n    \"labor_remove\": 2,\n    \"labor_prepare_bed\": 5,\n    \"labor_add_activity\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plant-properties/{{plantPropertyId}}",
									"path": [
										"plant-properties",
										"{{plantPropertyId}}"
									]
								},
								"description": "Update properties for a specific plant property."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"validation\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided\"\n        }\n    },\n    \"message\": \"Failed to update plant property\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete Plant Property",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "/plant-properties/{{plantPropertyId}}",
							"path": [
								"plant-properties",
								"{{plantPropertyId}}"
							]
						},
						"description": "Delete a specific plant property."
					},
					"response": [
						{
							"name": "Plant Property Deletion Success",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Plant property deleted successfully\"\n}"
						},
						{
							"name": "Plant Property Deletion Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "/plant-properties/{{plantPropertyId}}",
									"path": [
										"plant-properties",
										"{{plantPropertyId}}"
									]
								},
								"description": "Delete a specific plant property."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"resource\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant property not found\"\n        }\n    },\n    \"message\": \"Failed to delete plant property\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Get Plant Property",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/plant-properties/{{plantPropertyId}}",
							"path": [
								"plant-properties",
								"{{plantPropertyId}}"
							]
						},
						"description": "Retrieve details of a specific plant property."
					},
					"response": [
						{
							"name": "Plant Property Retrieval Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plant-properties/{{plantPropertyId}}",
									"path": [
										"plant-properties",
										"{{plantPropertyId}}"
									]
								},
								"description": "Retrieve details of a specific plant property."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{plantPropertyId}}\",\n        \"plant\": \"{{plantId}}\",\n        \"life_span_sowing_week\": 8,\n        \"life_span_transplanting_week\": 6,\n        \"life_span_harvesting_week\": 14,\n        \"life_span_removal_week\": 1,\n        \"temperature_survival\": 22,\n        \"temperature_growth\": 28,\n        \"temperature_production\": 26,\n        \"direct_sunlight\": 7,\n        \"seed_weight\": 2.5,\n        \"ph\": 6.8,\n        \"root_depth\": 14,\n        \"root_width\": 7,\n        \"feeding_type\": \"mineral\",\n        \"nutrients\": {\"nitrogen\": 10, \"phosphorus\": 6, \"potassium\": 8},\n        \"plant_shape\": \"Upright\",\n        \"water_liters\": 3,\n        \"water_drip_minutes\": 12,\n        \"water_frequency\": 3,\n        \"labor_sow\": 5,\n        \"labor_water\": 4,\n        \"labor_transplant\": 7,\n        \"labor_weed\": 6,\n        \"labor_prune\": 3,\n        \"labor_harvest\": 10,\n        \"labor_remove\": 2,\n        \"labor_prepare_bed\": 5,\n        \"labor_add_activity\": 4\n    },\n    \"errors\": null,\n    \"message\": \"Plant property details retrieved successfully\"\n}"
						},
						{
							"name": "Plant Property Retrieval Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plant-properties/{{plantPropertyId}}",
									"path": [
										"plant-properties",
										"{{plantPropertyId}}"
									]
								},
								"description": "Retrieve details of a specific plant property."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"resource\": {\n            \"code\": \"not_found\",\n            \"message\": \"Plant property not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve plant property details\"\n}"
						}
					]
				},
				{
					"name": "Get Life Span Variables",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "/plants/{{plantId}}/life-span-variables",
							"path": [
								"plants",
								"{{plantId}}",
								"life-span-variables"
							]
						},
						"description": "Retrieve life span variables for a specific plant."
					},
					"response": [
						{
							"name": "Life Span Variables Retrieval Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}/life-span-variables",
									"path": [
										"plants",
										"{{plantId}}",
										"life-span-variables"
									]
								},
								"description": "Retrieve life span variables for a specific plant."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"{{lifeSpanVariableId}}\",\n            \"plant\": \"{{plantId}}\",\n            \"age\": 5,\n            \"main_diameter\": 20,\n            \"main_height\": 120,\n            \"top_diameter\": null,\n            \"top_height\": null,\n            \"middle_diameter\": null,\n            \"middle_height\": null,\n            \"base_diameter\": null,\n            \"base_height\": null,\n            \"pieces\": 6,\n            \"weight\": 50\n        },\n        {\n            \"id\": \"{{lifeSpanVariableId2}}\",\n            \"plant\": \"{{plantId}}\",\n            \"age\": 8,\n            \"main_diameter\": 30,\n            \"main_height\": 150,\n            \"top_diameter\": null,\n            \"top_height\": null,\n            \"middle_diameter\": null,\n            \"middle_height\": null,\n            \"base_diameter\": null,\n            \"base_height\": null,\n            \"pieces\": 8,\n            \"weight\": 65\n        }\n    ],\n    \"errors\": null,\n    \"message\": \"Life span variables retrieved successfully\"\n}"
						},
						{
							"name": "Life Span Variables Retrieval Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "/plants/{{plantId}}/life-span-variables",
									"path": [
										"plants",
										"{{plantId}}",
										"life-span-variables"
									]
								},
								"description": "Retrieve life span variables for a specific plant."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"resource\": {\n            \"code\": \"not_found\",\n            \"message\": \"Life span variables not found for this plant\"\n        }\n    },\n    \"message\": \"Failed to retrieve life span variables\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Add Life Span Variables",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 5,\n    \"main_diameter\": 20,\n    \"main_height\": 120,\n    \"pieces\": 6,\n    \"weight\": 50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/plants/{{plantId}}/life-span-variables",
							"path": [
								"plants",
								"{{plantId}}",
								"life-span-variables"
							]
						},
						"description": "Add life span variables for a specific plant."
					},
					"response": [
						{
							"name": "Life Span Variables Addition Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"age\": 5,\n    \"main_diameter\": 20,\n    \"main_height\": 120,\n    \"pieces\": 6,\n    \"weight\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}/life-span-variables",
									"path": [
										"plants",
										"{{plantId}}",
										"life-span-variables"
									]
								},
								"description": "Add life span variables for a specific plant."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{lifeSpanVariableId}}\",\n        \"plant\": \"{{plantId}}\",\n        \"age\": 5,\n        \"main_diameter\": 20,\n        \"main_height\": 120,\n        \"pieces\": 6,\n        \"weight\": 50\n    },\n    \"errors\": null,\n    \"message\": \"Life span variables added successfully\"\n}"
						},
						{
							"name": "Life Span Variables Addition Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"age\": 5,\n    \"main_diameter\": 20,\n    \"main_height\": 120,\n    \"pieces\": 6,\n    \"weight\": 50\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/plants/{{plantId}}/life-span-variables",
									"path": [
										"plants",
										"{{plantId}}",
										"life-span-variables"
									]
								},
								"description": "Add life span variables for a specific plant."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"input\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided\"\n        }\n    },\n    \"message\": \"Failed to add life span variables\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Update Life Span Variables",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"age\": 6,\n    \"main_diameter\": 22,\n    \"main_height\": 130,\n    \"pieces\": 7,\n    \"weight\": 55\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/life-span-variables/{{lifeSpanVariableId}}",
							"path": [
								"life-span-variables",
								"{{lifeSpanVariableId}}"
							]
						},
						"description": "Update specific life span variables."
					},
					"response": [
						{
							"name": "Life Span Variables Update Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"age\": 6,\n    \"main_diameter\": 22,\n    \"main_height\": 130,\n    \"pieces\": 7,\n    \"weight\": 55\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/life-span-variables/{{lifeSpanVariableId}}",
									"path": [
										"life-span-variables",
										"{{lifeSpanVariableId}}"
									]
								},
								"description": "Update specific life span variables."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{plantPropertyId}}\",\n        \"plant\": \"{{plantId}}\",\n        \"age\": 6,\n        \"main_diameter\": 22,\n        \"main_height\": 130,\n        \"pieces\": 7,\n        \"weight\": 55\n    },\n    \"errors\": null,\n    \"message\": \"Life span variables updated successfully\"\n}"
						},
						{
							"name": "Life Span Variables Update Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"age\": 6,\n    \"main_diameter\": 22,\n    \"main_height\": 130,\n    \"pieces\": 7,\n    \"weight\": 55\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/life-span-variables/{{lifeSpanVariableId}}",
									"path": [
										"life-span-variables",
										"{{lifeSpanVariableId}}"
									]
								},
								"description": "Update specific life span variables."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"input\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided\"\n        }\n    },\n    \"message\": \"Failed to update life span variables\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete Life Span Variables",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/life-span-variables/{{lifeSpanVariableId}}",
							"path": [
								"life-span-variables",
								"{{lifeSpanVariableId}}"
							]
						},
						"description": "Delete specific life span variables."
					},
					"response": [
						{
							"name": "Life Span Variables Deletion Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/life-span-variables/{{lifeSpanVariableId}}",
									"path": [
										"life-span-variables",
										"{{lifeSpanVariableId}}"
									]
								},
								"description": "Delete specific life span variables."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Life span variables deleted successfully\"\n}"
						},
						{
							"name": "Life Span Variables Deletion Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/life-span-variables/{{lifeSpanVariableId}}",
									"path": [
										"life-span-variables",
										"{{lifeSpanVariableId}}"
									]
								},
								"description": "Delete specific life span variables."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"input\": {\n            \"code\": \"invalid_data\",\n            \"message\": \"Invalid data provided\"\n        }\n    },\n    \"message\": \"Failed to delete life span variables\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Get Life Span Variables by ID",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/life-span-variables/{{lifeSpanVariableId}}",
							"path": [
								"life-span-variables",
								"{{lifeSpanVariableId}}"
							]
						},
						"description": "Fetch specific life span variables by ID for admin purposes."
					},
					"response": [
						{
							"name": "Life Span Variables Get Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/life-span-variables/{{lifeSpanVariableId}}",
									"path": [
										"life-span-variables",
										"{{lifeSpanVariableId}}"
									]
								},
								"description": "Fetch specific life span variables by ID for admin purposes."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{plantPropertyId}}\",\n        \"plant\": \"{{plantId}}\",\n        \"age\": 5,\n        \"main_diameter\": 20,\n        \"main_height\": 120,\n        \"pieces\": 6,\n        \"weight\": 50\n    },\n    \"errors\": null,\n    \"message\": \"Life span variables retrieved successfully\"\n}"
						},
						{
							"name": "Life Span Variables Get Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/life-span-variables/{{lifeSpanVariableId}}",
									"path": [
										"life-span-variables",
										"{{lifeSpanVariableId}}"
									]
								},
								"description": "Fetch specific life span variables by ID for admin purposes."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"resource\": {\n            \"code\": \"not_found\",\n            \"message\": \"Life span variables not found\"\n        }\n    },\n    \"message\": \"Failed to retrieve life span variables\"\n}"
						}
					]
				}
			],
			"description": "The endpoints related to the plants, plant properties and plant life spans.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "objects",
			"item": [
				{
					"name": "Get Objects",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/objects/?type={{objectType}}&search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
							"path": [
								"objects",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "{{objectType}}"
								},
								{
									"key": "search",
									"value": "{{search}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit_per_page",
									"value": "{{limit_per_page}}"
								}
							]
						},
						"description": "Retrieve a list of objects."
					},
					"response": [
						{
							"name": "Get Objects Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/?type={{objectType}}&search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
									"path": [
										"objects",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "{{objectType}}"
										},
										{
											"key": "search",
											"value": "{{search}}"
										},
										{
											"key": "page",
											"value": "{{page}}"
										},
										{
											"key": "limit_per_page",
											"value": "{{limit_per_page}}"
										}
									]
								},
								"description": "Retrieve a list of objects."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"items\": [],\n        \"pagination\": {\n            \"total_pages\": {{total_pages}},\n            \"limit_per_page\": {{limit_per_page}},\n            \"current_page\": {{current_page}},\n            \"last_page\": {{last_page}}\n        }\n    },\n    \"errors\": null,\n    \"message\": \"Objects retrieved successfully\"\n}"
						},
						{
							"name": "Get Objects Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/?type={{objectType}}&search={{search}}&page={{page}}&limit_per_page={{limit_per_page}}",
									"path": [
										"objects",
										""
									],
									"query": [
										{
											"key": "type",
											"value": "{{objectType}}"
										},
										{
											"key": "search",
											"value": "{{search}}"
										},
										{
											"key": "page",
											"value": "{{page}}"
										},
										{
											"key": "limit_per_page",
											"value": "{{limit_per_page}}"
										}
									]
								},
								"description": "Retrieve a list of objects."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"No objects found\"\n    },\n    \"message\": \"Objects not found\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Create Object",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ObjectName\",\n    \"description\": \"Object Description\",\n    \"type\": \"ObjectType\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/objects",
							"path": [
								"objects"
							]
						},
						"description": "Create a new object."
					},
					"response": [
						{
							"name": "[Admin] Create Object Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"ObjectName\",\n    \"description\": \"Object Description\",\n    \"type\": \"ObjectType\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/objects",
									"path": [
										"objects"
									]
								},
								"description": "Create a new object."
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{object_id}}\",\n        \"name\": \"ObjectName\",\n        \"description\": \"Object Description\",\n        \"type\": \"ObjectType\"\n    },\n    \"errors\": null,\n    \"message\": \"Object created successfully\"\n}"
						},
						{
							"name": "[Admin] Create Object Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"ObjectName\",\n    \"description\": \"Object Description\",\n    \"type\": \"ObjectType\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/objects",
									"path": [
										"objects"
									]
								},
								"description": "Create a new object."
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Object creation failed\"\n    },\n    \"message\": \"Invalid request\"\n}"
						}
					]
				},
				{
					"name": "Retrieve Object by ID",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/objects/{{objectId}}",
							"path": [
								"objects",
								"{{objectId}}"
							]
						},
						"description": "Retrieve an object by its ID."
					},
					"response": [
						{
							"name": "Retrieve Object Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/{{objectId}}",
									"path": [
										"objects",
										"{{objectId}}"
									]
								},
								"description": "Retrieve an object by its ID."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"name\": \"ObjectName\",\n        \"description\": \"Object Description\",\n        \"type\": \"ObjectType\"\n    },\n    \"errors\": null,\n    \"message\": \"Object retrieved successfully\"\n}"
						},
						{
							"name": "Retrieve Object Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/{{objectId}}",
									"path": [
										"objects",
										"{{objectId}}"
									]
								},
								"description": "Retrieve an object by its ID."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Object not found\"\n    },\n    \"message\": \"Object retrieval failed\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete Object by ID",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/objects/{{objectId}}",
							"path": [
								"objects",
								"{{objectId}}"
							]
						},
						"description": "Delete an object by its ID. Admin access required."
					},
					"response": [
						{
							"name": "Delete Object Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/{{objectId}}",
									"path": [
										"objects",
										"{{objectId}}"
									]
								},
								"description": "Delete an object by its ID. Admin access required."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"errors\": null,\n    \"message\": \"Object deleted successfully\"\n}"
						},
						{
							"name": "Delete Object Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/{{objectId}}",
									"path": [
										"objects",
										"{{objectId}}"
									]
								},
								"description": "Delete an object by its ID. Admin access required."
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Object not found\"\n    },\n    \"message\": \"Object deletion failed\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Update Object by ID",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Object Name\",\n    \"description\": \"Updated Object Description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/objects/{{objectId}}",
							"path": [
								"objects",
								"{{objectId}}"
							]
						},
						"description": "Update an object by its ID. Admin access required."
					},
					"response": [
						{
							"name": "Update Object Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Updated Object Name\",\n    \"description\": \"Updated Object Description\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "/objects/{{objectId}}",
									"path": [
										"objects",
										"{{objectId}}"
									]
								},
								"description": "Update an object by its ID. Admin access required."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"name\": \"Updated Object Name\",\n        \"description\": \"Updated Object Description\"\n    },\n    \"errors\": null,\n    \"message\": \"Object updated successfully\"\n}"
						},
						{
							"name": "Update Object Failure",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Object not found\"\n    },\n    \"message\": \"Object update failed\"\n}"
						}
					]
				},
				{
					"name": "Grow Bed Shuffle - Pro Feature",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/objects/{{objectId}}/grow-bed-shuffle",
							"path": [
								"objects",
								"{{objectId}}",
								"grow-bed-shuffle"
							]
						},
						"description": "Shuffle a grow bed. Pro feature that recommends plants to plant throughout the year inside the grow bed."
					},
					"response": [
						{
							"name": "Grow Bed Shuffle Success",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/{{objectId}}/grow-bed-shuffle",
									"path": [
										"objects",
										"{{objectId}}",
										"grow-bed-shuffle"
									]
								},
								"description": "Shuffle a grow bed. Pro feature that recommends plants to plant throughout the year inside the grow bed."
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"recommended_plants\": [\n            {\n                \"id\": \"uuid\",\n                \"image\": \"path/to/image\",\n                \"name\": \"Plant Name\",\n                \"sub_name\": \"Sub Name\",\n                \"description\": \"Plant Description\",\n                \"type\": \"foreign_key_to_farm_element_types\",\n                \"recommended_periods\": {\n                    \"planting_period\": {\n                        \"startDate\": \"2024-03-01\",\n                        \"endDate\": \"2024-04-15\"\n                    },\n                    \"harvesting_period\": {\n                        \"startDate\": \"2024-07-01\",\n                        \"endDate\": \"2024-09-30\"\n                    }\n                }\n            }\n        ],\n        \"recommended_schedule\": \"Based on seasonal availability and growth cycles\"\n    },\n    \"errors\": null,\n    \"message\": \"Grow bed shuffled successfully\"\n}"
						},
						{
							"name": "Grow Bed Shuffle Failure",
							"originalRequest": {
								"auth": {
									"type": "bearer"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"name": "Authorization"
									}
								],
								"url": {
									"raw": "/objects/{{objectId}}/grow-bed-shuffle",
									"path": [
										"objects",
										"{{objectId}}",
										"grow-bed-shuffle"
									]
								},
								"description": "Shuffle a grow bed. Pro feature that recommends plants to plant throughout the year inside the grow bed."
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Unauthorized access\"\n    },\n    \"message\": \"Grow bed shuffle failed\"\n}"
						}
					]
				}
			],
			"description": "The endpoints replated the objects (grow beds, houses...etc.)",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "equations",
			"item": [
				{
					"name": "[Admin] Get Equations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/equations",
							"path": [
								"equations"
							]
						},
						"description": "Retrieve equations for statistical formulas."
					},
					"response": [
						{
							"name": "Equations Retrieved",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"equation_id\",\n            \"label\": \"Planting Area\",\n            \"name\": \"planting_area\",\n            \"formula\": \"MULT(NUM(3.14), MULT(VAR(farms, width), VAR(farms, height)))\"\n        },\n        {\n            \"id\": \"equation_id\",\n            \"label\": \"Pathway Area\",\n            \"name\": \"pathway_area\",\n            \"formula\": \"MINUS(NUM(100), VAR(farms, planting_area))\"\n        }\n    ],\n    \"message\": \"Equations retrieved successfully\"\n}"
						},
						{
							"name": "Equations Retrieval Failed",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Unauthorized access\"\n    },\n    \"message\": \"Failed to retrieve equations\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Create Equation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"label\": \"Planting Area\",\n  \"name\": \"planting_area\",\n  \"formula\": \"MULT(NUM(3.14), MULT(VAR(farms, width), VAR(farms, height)))\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/equations",
							"path": [
								"equations"
							]
						},
						"description": "Create a new equation for statistical formulas."
					},
					"response": [
						{
							"name": "Equation Created",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"equation_id\",\n        \"label\": \"Planting Area\",\n        \"name\": \"planting_area\",\n        \"formula\": \"MULT(NUM(3.14), MULT(VAR(farms, width), VAR(farms, height)))\"\n    },\n    \"message\": \"Equation created successfully\"\n}"
						},
						{
							"name": "Equation Creation Failed",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Failed to create equation\"\n    },\n    \"message\": \"Failed to create equation\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Update Equation",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"name": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"label\": \"New Planting Area\",\n  \"name\": \"new_planting_area\",\n  \"formula\": \"MULT(NUM(3.14), MULT(VAR(farms, width), VAR(farms, height)))\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/equations/{{equationId}}",
							"path": [
								"equations",
								"{{equationId}}"
							]
						},
						"description": "Update an existing equation by its ID."
					},
					"response": [
						{
							"name": "[Admin] Equation Updated",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"equation_id\",\n        \"label\": \"New Planting Area\",\n        \"name\": \"new_planting_area\",\n        \"formula\": \"MULT(NUM(3.14), MULT(VAR(farms, width), VAR(farms, height)))\"\n    },\n    \"message\": \"Equation updated successfully\"\n}"
						},
						{
							"name": "[Admin] Equation Update Failed",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Failed to update equation\"\n    },\n    \"message\": \"Failed to update equation\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Delete Equation",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/equations/{{equationId}}",
							"path": [
								"equations",
								"{{equationId}}"
							]
						},
						"description": "Delete an existing equation by its ID."
					},
					"response": [
						{
							"name": "[Admin] Equation Deleted",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": null,\n    \"message\": \"Equation deleted successfully\"\n}"
						},
						{
							"name": "[Admin] Equation Deletion Failed",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Failed to delete equation\"\n    },\n    \"message\": \"Failed to delete equation\"\n}"
						}
					]
				},
				{
					"name": "[Admin] Get Equation by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"name": "Authorization"
							}
						],
						"url": {
							"raw": "/equations/{{equationId}}",
							"path": [
								"equations",
								"{{equationId}}"
							]
						},
						"description": "Retrieve a specific equation by its ID."
					},
					"response": [
						{
							"name": "[Admin] Equation Found",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"equation_id\",\n        \"label\": \"Equation Label\",\n        \"name\": \"equation_name\",\n        \"formula\": \"equation_formula\"\n    },\n    \"errors\": null,\n    \"message\": \"Equation retrieved successfully\"\n}"
						},
						{
							"name": "[Admin] Equation Not Found",
							"originalRequest": {
								"method": "GET",
								"header": []
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"data\": null,\n    \"errors\": {\n        \"message\": \"Equation not found\"\n    },\n    \"message\": \"Equation not found\"\n}"
						}
					]
				}
			],
			"description": "The endpoints related to the dynamic equation formulas that are going to be used to calculate the statistics. All the endpoints here are specific to the admin only.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}